Index: Views/Employees/Index.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@model IEnumerable<GestionEmploye.Models.Employe>\r\n\r\n<link href=\"@Url.Content(\"~/css/admin.css\")\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"@Url.Content(\"~/css/salary.css\")\" rel=\"stylesheet\" type=\"text/css\"/>\r\n<link href=\"@Url.Content(\"~/css/employe.css\")\" rel=\"stylesheet\" type=\"text/css\"/>\r\n\r\n@{\r\n    ViewData[\"Title\"] = \"Index\";\r\n}\r\n\r\n<div class=\"card-body\">\r\n    <h2 class=\"card-title\">Liste des Employés</h2>\r\n    <hr class=\"sep\"/>\r\n</div>\r\n\r\n<p>\r\n    <a asp-action=\"Create\" class=\"btn btn-outline-primary\">Create New</a>\r\n</p>\r\n\r\n<div class=\"list card\">\r\n    <div class=\"employe-list card-body\">\r\n        @if (((List<Employe>) ViewBag.Employees).Count != 0)\r\n        {\r\n            <table class=\"admin-tables table table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Nom</th>\r\n                    <th scope=\"col\">Prenom</th>\r\n                    <th scope=\"col\">E-mail</th>\r\n                    <th scope=\"col\">Durée congé</th>\r\n                    <th scope=\"col\">Montant salaire</th>\r\n                </tr>\r\n                </thead>\r\n    \r\n                <tbody>\r\n                @foreach (var employe in (List<Employe>) ViewData[\"Employees\"])\r\n                {\r\n                    <tr>\r\n                        <th scope=\"row\">@employe.PersonId</th>\r\n                        <td>@employe.Person.Nom</td>\r\n                        <td>@employe.Person.Prenom</td>\r\n                        <td>@employe.Person.Email</td>\r\n                        <td>@employe.CongeRemaining</td>\r\n                        <td>@employe.CurrentSalary</td>\r\n                        <td class=\"row-action\">\r\n                            <div class=\"icon-wrapper\">\r\n                                <a asp-action=\"Edit\" asp-route-id=\"@employe.PersonId\" class=\"icon\" style=\"--color: 16, 172, 132\">\r\n                                    <svg class=\"svg-man\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                                        <path d=\"M362.7 19.32C387.7-5.678 428.3-5.678 453.3 19.32L492.7 58.75C517.7 83.74 517.7 124.3 492.7 149.3L444.3 197.7L314.3 67.72L362.7 19.32zM421.7 220.3L188.5 453.4C178.1 463.8 165.2 471.5 151.1 475.6L30.77 511C22.35 513.5 13.24 511.2 7.03 504.1C.8198 498.8-1.502 489.7 .976 481.2L36.37 360.9C40.53 346.8 48.16 333.9 58.57 323.5L291.7 90.34L421.7 220.3z\"/>\r\n                                    </svg>\r\n                                </a>\r\n                                <a asp-action=\"Details\" asp-route-id=\"@employe.PersonId\" class=\"icon\">\r\n                                    <svg class=\"svg-man\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                                        <path d=\"M224 256c70.7 0 128-57.31 128-128s-57.3-128-128-128C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3C77.61 304 0 381.6 0 477.3c0 19.14 15.52 34.67 34.66 34.67h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304z\"/>\r\n                                    </svg>\r\n                                </a>\r\n                                <a asp-action=\"Delete\" asp-route-id=\"@employe.PersonId\" class=\"icon\" style=\"--color: 238, 82, 83\">\r\n                                    <svg class=\"svg-man\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                                        <path d=\"M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM394.8 466.1C393.2 492.3 372.3 512 346.9 512H101.1C75.75 512 54.77 492.3 53.19 466.1L31.1 128H416L394.8 466.1z\"/>\r\n                                    </svg>\r\n                                </a>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n        }\r\n        else\r\n        {\r\n            <p>\r\n                <pre class=\"fw-bold fs-5\">Rien à afficher ici -</pre>\r\n            </p>\r\n        }\r\n    </div>\r\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Employees/Index.cshtml b/Views/Employees/Index.cshtml
--- a/Views/Employees/Index.cshtml	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/Views/Employees/Index.cshtml	(date 1653578095011)
@@ -14,64 +14,72 @@
 </div>
 
 <p>
-    <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
+    <a asp-action="Create" class="btn btn-outline-primary">Ajouter un employe</a>
 </p>
 
 <div class="list card">
     <div class="employe-list card-body">
-        @if (((List<Employe>) ViewBag.Employees).Count != 0)
+        @if (((List<Employe>)ViewBag.Employees).Count != 0)
         {
-            <table class="admin-tables table table-hover">
-                <thead>
-                <tr>
-                    <th scope="col">#</th>
-                    <th scope="col">Nom</th>
-                    <th scope="col">Prenom</th>
-                    <th scope="col">E-mail</th>
-                    <th scope="col">Durée congé</th>
-                    <th scope="col">Montant salaire</th>
-                </tr>
-                </thead>
-    
-                <tbody>
-                @foreach (var employe in (List<Employe>) ViewData["Employees"])
-                {
-                    <tr>
-                        <th scope="row">@employe.PersonId</th>
-                        <td>@employe.Person.Nom</td>
-                        <td>@employe.Person.Prenom</td>
-                        <td>@employe.Person.Email</td>
-                        <td>@employe.CongeRemaining</td>
-                        <td>@employe.CurrentSalary</td>
-                        <td class="row-action">
-                            <div class="icon-wrapper">
-                                <a asp-action="Edit" asp-route-id="@employe.PersonId" class="icon" style="--color: 16, 172, 132">
-                                    <svg class="svg-man" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
-                                        <path d="M362.7 19.32C387.7-5.678 428.3-5.678 453.3 19.32L492.7 58.75C517.7 83.74 517.7 124.3 492.7 149.3L444.3 197.7L314.3 67.72L362.7 19.32zM421.7 220.3L188.5 453.4C178.1 463.8 165.2 471.5 151.1 475.6L30.77 511C22.35 513.5 13.24 511.2 7.03 504.1C.8198 498.8-1.502 489.7 .976 481.2L36.37 360.9C40.53 346.8 48.16 333.9 58.57 323.5L291.7 90.34L421.7 220.3z"/>
-                                    </svg>
-                                </a>
-                                <a asp-action="Details" asp-route-id="@employe.PersonId" class="icon">
-                                    <svg class="svg-man" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
-                                        <path d="M224 256c70.7 0 128-57.31 128-128s-57.3-128-128-128C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3C77.61 304 0 381.6 0 477.3c0 19.14 15.52 34.67 34.66 34.67h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304z"/>
-                                    </svg>
-                                </a>
-                                <a asp-action="Delete" asp-route-id="@employe.PersonId" class="icon" style="--color: 238, 82, 83">
-                                    <svg class="svg-man" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
-                                        <path d="M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM394.8 466.1C393.2 492.3 372.3 512 346.9 512H101.1C75.75 512 54.77 492.3 53.19 466.1L31.1 128H416L394.8 466.1z"/>
-                                    </svg>
-                                </a>
-                            </div>
-                        </td>
-                    </tr>
-                }
-                </tbody>
-            </table>
+                    <table class="admin-tables table table-hover">
+                        <thead>
+                        <tr>
+                            <th scope="col">#</th>
+                            <th scope="col">Nom</th>
+                            <th scope="col">Prenom</th>
+                            <th scope="col">E-mail</th>
+                            <th scope="col">Durée congé</th>
+                            <th scope="col">Montant salaire</th>
+                        </tr>
+                        </thead>
+
+                        <tbody>
+                    @foreach (var employe in (List<Employe>)ViewData["Employees"])
+                    {
+                                    <tr>
+                                        <th scope="row">@employe.PersonId</th>
+                                        <td>@employe.Person.Nom</td>
+                                        <td>@employe.Person.Prenom</td>
+                                        <td>@employe.Person.Email</td>
+                                        <td>@employe.CongeRemaining</td>
+                                        <td>@employe.CurrentSalary</td>
+                                        <td>
+                                            <div class="icon-wrapper">
+                                                <a asp-action="Edit" asp-route-id="@employe.Id" class="icon" style="--color: 16, 172, 132">
+                                                    <svg class="svg-man" viewBox="0 0 512 512">
+                                                        <path d="M362.7 19.32C387.7-5.678 428.3-5.678 453.3 19.32L492.7 58.75C517.7 83.74 517.7 124.3 492.7 149.3L444.3 197.7L314.3 67.72L362.7 19.32zM421.7 220.3L188.5 453.4C178.1 463.8 165.2 471.5 151.1 475.6L30.77 511C22.35 513.5 13.24 511.2 7.03 504.1C.8198 498.8-1.502 489.7 .976 481.2L36.37 360.9C40.53 346.8 48.16 333.9 58.57 323.5L291.7 90.34L421.7 220.3z"/>
+                                                    </svg>
+                                                </a>
+                                                <a asp-action="Details" asp-route-id="@employe.Id" class="icon">
+                                                    <svg class="svg-man" viewBox="0 0 448 512">
+                                                        <path d="M224 256c70.7 0 128-57.31 128-128s-57.3-128-128-128C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3C77.61 304 0 381.6 0 477.3c0 19.14 15.52 34.67 34.66 34.67h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304z"/>
+                                                    </svg>
+                                                </a>
+                                                <form asp-action="Delete" class="delete-form">
+                                                <label>
+                                                    <input type="submit" value="" style="display: none;">
+                                                    <a class="icon" style="--color: 238, 82, 83">
+                                                        <svg class="svg-man" viewBox="0 0 448 512">
+                                                            <path
+                                                                d="M135.2 17.69C140.6 6.848 151.7 0 163.8 0H284.2C296.3 0 307.4 6.848 312.8 17.69L320 32H416C433.7 32 448 46.33 448 64C448 81.67 433.7 96 416 96H32C14.33 96 0 81.67 0 64C0 46.33 14.33 32 32 32H128L135.2 17.69zM394.8 466.1C393.2 492.3 372.3 512 346.9 512H101.1C75.75 512 54.77 492.3 53.19 466.1L31.1 128H416L394.8 466.1z" />
+                                                        </svg>
+                                                    </a>
+                                                </label>
+                                                <input type="hidden" asp-for="@employe.Id" name="Id" />
+
+                                            </form>
+                                            </div>
+                                        </td>
+                                    </tr>
+                    }
+                        </tbody>
+                    </table>
         }
         else
         {
-            <p>
-                <pre class="fw-bold fs-5">Rien à afficher ici -</pre>
-            </p>
+                    <p>
+                        <pre class="fw-bold fs-5">Rien à afficher ici -</pre>
+                    </p>
         }
     </div>
-</div>
\ No newline at end of file
+</div>
Index: wwwroot/css/admin.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>body {\r\n    background-color: #f9f9f9;\r\n}\r\n\r\n.admin-card {\r\n    background-color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1.3rem;\r\n    border-radius: .4rem;\r\n    flex:1;\r\n}\r\n\r\n.admin-card h2 {\r\n    font-weight: 300;\r\n    color: #4f4f4f;\r\n    font-size: 1.4rem;\r\n    white-space: nowrap;\r\n}\r\n\r\n.admin-card .value {\r\n    font-weight: 500;\r\n    font-size: 1.5rem;\r\n    margin: 0;\r\n}\r\n\r\n.admin-card .icon {\r\n    --color: 13,110,253;\r\n    background-color: rgb(var(--color));\r\n    box-shadow: 0 0 0 0.4rem rgba(var(--color),.1);\r\n    padding: .8rem\r\n}\r\n\r\n.admin-card svg {\r\n    width: 30px;\r\n    aspect-ratio: 1;\r\n}\r\n\r\n.card{\r\n    --b-color: #1094da;\r\n    padding: 1.3em;\r\n    border-radius: 12px;\r\n    border-left-color: var(--b-color);\r\n    border-left-width: 5px;\r\n    border-top-left-radius: 5px;\r\n    border-bottom-left-radius: 5px;\r\n}\r\n.card-title{\r\n    color: var(--b-color);\r\n}\r\n\r\n.list{\r\n    margin-top: 3.0em;\r\n    background-color: transparent;\r\n}\r\n.paie-list,\r\n.conge-list,\r\n.employe-list {\r\n    background-color: white;\r\n    border-radius: 10px;\r\n}\r\n.admin-tables{\r\n    background-color: white;\r\n}\r\n\r\nth{\r\n    white-space: nowrap;\r\n}\r\n\r\n.sep{\r\n    width: 40px;\r\n    padding: 2px 0;\r\n    background-color: var(--b-color);\r\n    opacity: 1;\r\n    border-radius: 5ch;\r\n}\r\n\r\n.admin-tables :is(td , th){\r\n    padding-block: 20px;\r\n}\r\n\r\n/*.admin-tables > tbody > * > *{*/\r\n/*    --sep-color: #c4c4c4;*/\r\n/*    border-bottom: 1px solid var(--sep-color);*/\r\n/*}*/\r\n\r\ntd, th{\r\n    vertical-align: middle;\r\n}\r\n\r\n.table>:not(:last-child)>:last-child>* {\r\n    border-bottom-color: transparent;\r\n}\r\n\r\n.table>:not(caption)>> {\r\n    border-bottom-width: 0;\r\n}\r\n\r\n.card-subtitle{\r\n    padding-bottom: 10px;\r\n}\r\n\r\n/*.row-action{*/\r\n/*    border: none;*/\r\n/*}*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/wwwroot/css/admin.css b/wwwroot/css/admin.css
--- a/wwwroot/css/admin.css	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/wwwroot/css/admin.css	(date 1653578095019)
@@ -92,7 +92,7 @@
     border-bottom-color: transparent;
 }
 
-.table>:not(caption)>> {
+.table>:not(caption){
     border-bottom-width: 0;
 }
 
Index: wwwroot/css/employe.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.table>:not(:last-child)>:last-child>* {\r\n    border-bottom-color: transparent;\r\n}\r\n\r\n.table>:not(caption)>> {\r\n    border-bottom-width: 0;\r\n}\r\n\r\n.admin-tables :is(td , th){\r\n    padding-block: 20px;\r\n}\r\n\r\n.svg-man{\r\n    height: 16px;\r\n    width: 16px;\r\n}\r\n\r\ntd, th{\r\n    vertical-align: middle;\r\n}\r\n.icon-wrapper{\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 15px;\r\n}\r\n\r\n/*.icon{*/\r\n/*    --color: 44, 62, 80;*/\r\n/*    !*background-color: rgb(var(--color));*!*/\r\n/*    !*box-shadow: 0 0 0 0.4rem rgba(var(--color),.1);*!*/\r\n/*    text-align: center;*/\r\n/*    padding: 5px;*/\r\n/*    border-radius: 5px;*/\r\n/*    */\r\n/*    text-decoration: none;*/\r\n/*}*/\r\n/*.icon:nth-child(2){*/\r\n/*    margin: 0 20px;*/\r\n/*}*/\r\n\r\n.icon:hover{\r\n    animation: pulsate .7s ease-in-out backwards;\r\n    transition-duration: .2s;\r\n    background-color: rgb(var(--color));\r\n    box-shadow: 0 0 0 0.4rem rgba(var(--color),.1);\r\n    fill: white;\r\n}\r\n\r\n\r\n.icon{\r\n    --color: 46, 134, 222;\r\n    display: flex;\r\n    text-decoration: none;\r\n    \r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    justify-content: center;\r\n    \r\n    border: 1px solid rgb(var(--color));\r\n    fill: rgb(var(--color));\r\n}\r\n\r\n.card-body{\r\n    padding: 0;\r\n    padding-top: 5ch;\r\n    padding-bottom: 3ch;\r\n}\r\n\r\n.card-title{\r\n    --b-color: #1094da;\r\n    color: var(--b-color);\r\n    text-align: center;\r\n}\r\n\r\n.sep{\r\n    --b-color: #1094da;\r\n    width: 50px;\r\n    padding: 2px 0;\r\n    background-color: var(--b-color);\r\n    opacity: 1;\r\n    border-radius: 5ch;\r\n}\r\n\r\n@keyframes pulsate {\r\n    0%{\r\n        box-shadow: 0 0 25px white,\r\n        0 0 50px rgb(var(--color));\r\n    }\r\n}\r\n\r\n.card{\r\n    background-color: white;    \r\n}\r\n\r\n/*.admin-tables{*/\r\n/*    --b-color: #1094da;*/\r\n/*    border-left: 5px solid var(--b-color);*/\r\n/*    border-top-left-radius: 5px !important;*/\r\n/*    border-bottom-left-radius: 5px !important;*/\r\n/*}*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/wwwroot/css/employe.css b/wwwroot/css/employe.css
--- a/wwwroot/css/employe.css	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/wwwroot/css/employe.css	(date 1653578095027)
@@ -2,7 +2,7 @@
     border-bottom-color: transparent;
 }
 
-.table>:not(caption)>> {
+.table>:not(caption) {
     border-bottom-width: 0;
 }
 
@@ -92,6 +92,10 @@
     background-color: white;    
 }
 
+.delete-form a {
+    cursor: pointer;
+}
+
 /*.admin-tables{*/
 /*    --b-color: #1094da;*/
 /*    border-left: 5px solid var(--b-color);*/
Index: Views/Employees/Edit.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@model GestionEmploye.Models.Employe\r\n\r\n@{\r\n    ViewData[\"Title\"] = \"Edit\";\r\n}\r\n\r\n<h1>Edit</h1>\r\n\r\n<h4>Employe</h4>\r\n<hr />\r\n<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <form asp-action=\"Edit\">\r\n            <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\r\n            <input type=\"hidden\" asp-for=\"Id\" />\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"PersonId\" class=\"control-label\"></label>\r\n                <input asp-for=\"PersonId\" class=\"form-control\" />\r\n                <span asp-validation-for=\"PersonId\" class=\"text-danger\"></span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"CongeRemaining\" class=\"control-label\"></label>\r\n                <input asp-for=\"CongeRemaining\" class=\"form-control\" />\r\n                <span asp-validation-for=\"CongeRemaining\" class=\"text-danger\"></span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"CurrentSalary\" class=\"control-label\"></label>\r\n                <input asp-for=\"CurrentSalary\" class=\"form-control\" />\r\n                <span asp-validation-for=\"CurrentSalary\" class=\"text-danger\"></span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"submit\" value=\"Save\" class=\"btn btn-primary\" />\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<div>\r\n    <a asp-action=\"Index\">Back to List</a>\r\n</div>\r\n\r\n@section Scripts {\r\n    @{await Html.RenderPartialAsync(\"_ValidationScriptsPartial\");}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Employees/Edit.cshtml b/Views/Employees/Edit.cshtml
--- a/Views/Employees/Edit.cshtml	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/Views/Employees/Edit.cshtml	(date 1653578094998)
@@ -4,41 +4,49 @@
     ViewData["Title"] = "Edit";
 }
 
-<h1>Edit</h1>
+<h1>Editer</h1>
 
-<h4>Employe</h4>
 <hr />
 <div class="row">
     <div class="col-md-4">
         <form asp-action="Edit">
             <div asp-validation-summary="ModelOnly" class="text-danger"></div>
             <input type="hidden" asp-for="Id" />
+            <input type="hidden" asp-for="Person.Id" />
+            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
+            <div class="form-group">
+                <label asp-for="Person.Nom" class="control-label"></label>
+                <input asp-for="Person.Nom" class="form-control" />
+                <span asp-validation-for="Person.Nom" class="text-danger"></span>
+            </div>
             <div class="form-group">
-                <label asp-for="PersonId" class="control-label"></label>
-                <input asp-for="PersonId" class="form-control" />
-                <span asp-validation-for="PersonId" class="text-danger"></span>
+                <label asp-for="Person.Prenom" class="control-label"></label>
+                <input asp-for="Person.Prenom" class="form-control" />
+                <span asp-validation-for="Person.Prenom" class="text-danger"></span>
             </div>
             <div class="form-group">
-                <label asp-for="CongeRemaining" class="control-label"></label>
-                <input asp-for="CongeRemaining" class="form-control" />
-                <span asp-validation-for="CongeRemaining" class="text-danger"></span>
+                <label asp-for="Person.Email" class="control-label"></label>
+                <input asp-for="Person.Email" class="form-control" />
+                <span asp-validation-for="Person.Email" class="text-danger"></span>
             </div>
             <div class="form-group">
-                <label asp-for="CurrentSalary" class="control-label"></label>
+                <label asp-for="Person.Password" class="control-label"></label>
+                <input asp-for="Person.Password" class="form-control" />
+                <span asp-validation-for="Person.Password" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="CurrentSalary" class="control-label">Salaire</label>
                 <input asp-for="CurrentSalary" class="form-control" />
                 <span asp-validation-for="CurrentSalary" class="text-danger"></span>
             </div>
-            <div class="form-group">
-                <input type="submit" value="Save" class="btn btn-primary" />
+            <div class="form-group mt-4 d-flex gap-3">
+                <input type="submit" value="Editer" class="btn btn-primary px-4" />
+                <a asp-action="Index" class="btn btn-outline-dark">Annuler</a>
             </div>
         </form>
     </div>
 </div>
-
-<div>
-    <a asp-action="Index">Back to List</a>
-</div>
 
 @section Scripts {
-    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
+@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
 }
Index: Views/Employees/Create.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@model GestionEmploye.Models.Employe\r\n\r\n@{\r\n    ViewData[\"Title\"] = \"Create\";\r\n}\r\n\r\n<h1>Create</h1>\r\n\r\n<h4>Employe</h4>\r\n<hr />\r\n<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <form asp-action=\"Create\">\r\n            <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"PersonId\" class=\"control-label\"></label>\r\n                <input asp-for=\"PersonId\" class=\"form-control\" />\r\n                <span asp-validation-for=\"PersonId\" class=\"text-danger\"></span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"CongeRemaining\" class=\"control-label\"></label>\r\n                <input asp-for=\"CongeRemaining\" class=\"form-control\" />\r\n                <span asp-validation-for=\"CongeRemaining\" class=\"text-danger\"></span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"CurrentSalary\" class=\"control-label\"></label>\r\n                <input asp-for=\"CurrentSalary\" class=\"form-control\" />\r\n                <span asp-validation-for=\"CurrentSalary\" class=\"text-danger\"></span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"submit\" value=\"Create\" class=\"btn btn-primary\" />\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<div>\r\n    <a asp-action=\"Index\">Back to List</a>\r\n</div>\r\n\r\n@section Scripts {\r\n    @{await Html.RenderPartialAsync(\"_ValidationScriptsPartial\");}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Employees/Create.cshtml b/Views/Employees/Create.cshtml
--- a/Views/Employees/Create.cshtml	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/Views/Employees/Create.cshtml	(date 1653578094980)
@@ -4,39 +4,46 @@
     ViewData["Title"] = "Create";
 }
 
-<h1>Create</h1>
+<h1>Enregister un nouveau Employe</h1>
 
-<h4>Employe</h4>
 <hr />
 <div class="row">
     <div class="col-md-4">
         <form asp-action="Create">
             <div asp-validation-summary="ModelOnly" class="text-danger"></div>
             <div class="form-group">
-                <label asp-for="PersonId" class="control-label"></label>
-                <input asp-for="PersonId" class="form-control" />
-                <span asp-validation-for="PersonId" class="text-danger"></span>
+                <label asp-for="Person.Nom" class="control-label"></label>
+                <input asp-for="Person.Nom" class="form-control" />
+                <span asp-validation-for="Person.Nom" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="Person.Prenom" class="control-label"></label>
+                <input asp-for="Person.Prenom" class="form-control" />
+                <span asp-validation-for="Person.Prenom" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="Person.Email" class="control-label"></label>
+                <input asp-for="Person.Email" class="form-control" />
+                <span asp-validation-for="Person.Email" class="text-danger"></span>
             </div>
             <div class="form-group">
-                <label asp-for="CongeRemaining" class="control-label"></label>
-                <input asp-for="CongeRemaining" class="form-control" />
-                <span asp-validation-for="CongeRemaining" class="text-danger"></span>
+                <label asp-for="Person.Password" class="control-label"></label>
+                <input asp-for="Person.Password" class="form-control" />
+                <span asp-validation-for="Person.Password" class="text-danger"></span>
             </div>
             <div class="form-group">
-                <label asp-for="CurrentSalary" class="control-label"></label>
+                <label asp-for="CurrentSalary" class="control-label">Salaire</label>
                 <input asp-for="CurrentSalary" class="form-control" />
                 <span asp-validation-for="CurrentSalary" class="text-danger"></span>
             </div>
-            <div class="form-group">
-                <input type="submit" value="Create" class="btn btn-primary" />
+            <div class="form-group mt-4 d-flex gap-3">
+                <input type="submit" value="Creer" class="btn btn-primary px-4" />
+                <a asp-action="Index" class="btn btn-outline-dark">Annuler</a>
             </div>
         </form>
     </div>
 </div>
 
-<div>
-    <a asp-action="Index">Back to List</a>
-</div>
 
 @section Scripts {
     @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
Index: Models/Person.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.ComponentModel.DataAnnotations;\r\n\r\nnamespace GestionEmploye.Models\r\n{\r\n    public class Person\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        [Required]\r\n        public string Nom { get; set; }\r\n        \r\n        [Required]\r\n        public string Prenom { get; set; }\r\n\r\n        [Required(ErrorMessage = \"Le champs Email doit etre remplis\")]\r\n        [DataType(DataType.EmailAddress)]\r\n        public string Email { get; set; }\r\n        \r\n        [Required(ErrorMessage = \"Le champs Mot de passe doit etre remplis\")]\r\n        [DataType(DataType.Password)]\r\n        public string Password { get; set; }\r\n\r\n        public int? EmployeId { get; set; }\r\n        public Employe? Employe { get; set; }\r\n        public int? AdminId { get; set; }\r\n        public Admin? Admin { get; set; }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Person.cs b/Models/Person.cs
--- a/Models/Person.cs	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/Models/Person.cs	(date 1653578094964)
@@ -6,17 +6,17 @@
     {
         public int Id { get; set; }
 
-        [Required]
+        [Required(ErrorMessage = "Le champ Nom doit etre remplis")]
         public string Nom { get; set; }
         
-        [Required]
+        [Required(ErrorMessage = "Le champ Prenom doit etre remplis")]
         public string Prenom { get; set; }
 
-        [Required(ErrorMessage = "Le champs Email doit etre remplis")]
+        [Required(ErrorMessage = "Le champ Email doit etre remplis")]
         [DataType(DataType.EmailAddress)]
         public string Email { get; set; }
         
-        [Required(ErrorMessage = "Le champs Mot de passe doit etre remplis")]
+        [Required(ErrorMessage = "Le champ Mot de passe doit etre remplis")]
         [DataType(DataType.Password)]
         public string Password { get; set; }
 
Index: Models/Employe.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.ComponentModel;\r\nusing System.ComponentModel.DataAnnotations;\r\n\r\nnamespace GestionEmploye.Models\r\n{\r\n    public class Employe\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        [Required]\r\n        public int PersonId {get; set;}\r\n\r\n        [Required]\r\n        public Person Person {get; set;}\r\n\r\n        \r\n        [DefaultValue(30)]\r\n        [Range(0,30)]\r\n        public int CongeRemaining { get; set; }\r\n\r\n        \r\n        public float CurrentSalary { get; set; }\r\n\r\n        public ICollection<Conge> Conges { get; set; }\r\n        \r\n        public ICollection<Salary> Salaries { get; set; }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Employe.cs b/Models/Employe.cs
--- a/Models/Employe.cs	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/Models/Employe.cs	(date 1653578094956)
@@ -18,7 +18,9 @@
         [Range(0,30)]
         public int CongeRemaining { get; set; }
 
-        
+        [Display(Name = "Salaire")]
+        [RegularExpression("\\d+", ErrorMessage = "Le salaire doit etre numerique")]
+        [Required(ErrorMessage = "Le champ Salaire doit etre remplis")]
         public float CurrentSalary { get; set; }
 
         public ICollection<Conge> Conges { get; set; }
Index: Controllers/EmployeesController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.Rendering;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing GestionEmploye.Models;\r\n\r\nnamespace GestionEmploye.Controllers\r\n{\r\n    public class EmployeesController : Controller\r\n    {\r\n        private readonly AppContext _context;\r\n\r\n        public EmployeesController(AppContext context)\r\n        {\r\n            _context = context;\r\n        }\r\n\r\n        // GET: Employees\r\n        public async Task<IActionResult> Index()\r\n        {\r\n            ViewData[\"Employees\"] = await _context.Employe.Include(nameof(Person)).ToListAsync();\r\n            return View();\r\n        }\r\n\r\n        // GET: Employees/Details/5\r\n        public async Task<IActionResult> Details(int? id)\r\n        {\r\n            if (id == null || _context.Employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            var employe = await _context.Employe\r\n                .FirstOrDefaultAsync(m => m.Id == id);\r\n            if (employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            return View(employe);\r\n        }\r\n\r\n        // GET: Employees/Create\r\n        public IActionResult Create()\r\n        {\r\n            return View();\r\n        }\r\n\r\n        // POST: Employees/Create\r\n        // To protect from overposting attacks, enable the specific properties you want to bind to.\r\n        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.\r\n        [HttpPost]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task<IActionResult> Create([Bind(\"Id,PersonId,CongeRemaining,CurrentSalary\")] Employe employe)\r\n        {\r\n            if (ModelState.IsValid)\r\n            {\r\n                _context.Add(employe);\r\n                await _context.SaveChangesAsync();\r\n                return RedirectToAction(nameof(Index));\r\n            }\r\n            return View(employe);\r\n        }\r\n\r\n        // GET: Employees/Edit/5\r\n        public async Task<IActionResult> Edit(int? id)\r\n        {\r\n            if (id == null || _context.Employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            var employe = await _context.Employe.FindAsync(id);\r\n            if (employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n            return View(employe);\r\n        }\r\n\r\n        // POST: Employees/Edit/5\r\n        // To protect from overposting attacks, enable the specific properties you want to bind to.\r\n        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.\r\n        [HttpPost]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task<IActionResult> Edit(int id, [Bind(\"Id,PersonId,CongeRemaining,CurrentSalary\")] Employe employe)\r\n        {\r\n            if (id != employe.Id)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            if (ModelState.IsValid)\r\n            {\r\n                try\r\n                {\r\n                    _context.Update(employe);\r\n                    await _context.SaveChangesAsync();\r\n                }\r\n                catch (DbUpdateConcurrencyException)\r\n                {\r\n                    if (!EmployeExists(employe.Id))\r\n                    {\r\n                        return NotFound();\r\n                    }\r\n                    else\r\n                    {\r\n                        throw;\r\n                    }\r\n                }\r\n                return RedirectToAction(nameof(Index));\r\n            }\r\n            return View(employe);\r\n        }\r\n\r\n        // GET: Employees/Delete/5\r\n        public async Task<IActionResult> Delete(int? id)\r\n        {\r\n            if (id == null || _context.Employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            var employe = await _context.Employe\r\n                .FirstOrDefaultAsync(m => m.Id == id);\r\n            if (employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            return View(employe);\r\n        }\r\n\r\n        // POST: Employees/Delete/5\r\n        [HttpPost, ActionName(\"Delete\")]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task<IActionResult> DeleteConfirmed(int id)\r\n        {\r\n            if (_context.Employe == null)\r\n            {\r\n                return Problem(\"Entity set 'AppContext.Employe'  is null.\");\r\n            }\r\n            var employe = await _context.Employe.FindAsync(id);\r\n            if (employe != null)\r\n            {\r\n                _context.Employe.Remove(employe);\r\n            }\r\n\r\n            await _context.SaveChangesAsync();\r\n            return RedirectToAction(nameof(Index));\r\n        }\r\n\r\n        private bool EmployeExists(int id)\r\n        {\r\n            return _context.Employe.Any(e => e.Id == id);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controllers/EmployeesController.cs b/Controllers/EmployeesController.cs
--- a/Controllers/EmployeesController.cs	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/Controllers/EmployeesController.cs	(date 1653578094931)
@@ -18,14 +18,14 @@
             _context = context;
         }
 
-        // GET: Employees
+
         public async Task<IActionResult> Index()
         {
             ViewData["Employees"] = await _context.Employe.Include(nameof(Person)).ToListAsync();
             return View();
         }
 
-        // GET: Employees/Details/5
+
         public async Task<IActionResult> Details(int? id)
         {
             if (id == null || _context.Employe == null)
@@ -33,28 +33,28 @@
                 return NotFound();
             }
 
-            var employe = await _context.Employe
+            var employe = await _context.Employe.Include(nameof(Person))
                 .FirstOrDefaultAsync(m => m.Id == id);
+            
             if (employe == null)
             {
                 return NotFound();
             }
 
+            ViewData["Employee"] = employe;
+
             return View(employe);
         }
 
-        // GET: Employees/Create
+
         public IActionResult Create()
         {
             return View();
         }
 
-        // POST: Employees/Create
-        // To protect from overposting attacks, enable the specific properties you want to bind to.
-        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
+        
         [HttpPost]
-        [ValidateAntiForgeryToken]
-        public async Task<IActionResult> Create([Bind("Id,PersonId,CongeRemaining,CurrentSalary")] Employe employe)
+        public async Task<IActionResult> Create(Employe employe)
         {
             if (ModelState.IsValid)
             {
@@ -65,7 +65,7 @@
             return View(employe);
         }
 
-        // GET: Employees/Edit/5
+
         public async Task<IActionResult> Edit(int? id)
         {
             if (id == null || _context.Employe == null)
@@ -73,7 +73,7 @@
                 return NotFound();
             }
 
-            var employe = await _context.Employe.FindAsync(id);
+            var employe = await _context.Employe.Include(nameof(Person)).FirstOrDefaultAsync(i => i.Id == id);
             if (employe == null)
             {
                 return NotFound();
@@ -81,12 +81,9 @@
             return View(employe);
         }
 
-        // POST: Employees/Edit/5
-        // To protect from overposting attacks, enable the specific properties you want to bind to.
-        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
+        
         [HttpPost]
-        [ValidateAntiForgeryToken]
-        public async Task<IActionResult> Edit(int id, [Bind("Id,PersonId,CongeRemaining,CurrentSalary")] Employe employe)
+        public async Task<IActionResult> Edit(int id,Employe employe)
         {
             if (id != employe.Id)
             {
@@ -102,60 +99,32 @@
                 }
                 catch (DbUpdateConcurrencyException)
                 {
-                    if (!EmployeExists(employe.Id))
-                    {
-                        return NotFound();
-                    }
-                    else
-                    {
-                        throw;
-                    }
+                    return NotFound();
                 }
                 return RedirectToAction(nameof(Index));
             }
             return View(employe);
         }
 
-        // GET: Employees/Delete/5
-        public async Task<IActionResult> Delete(int? id)
-        {
-            if (id == null || _context.Employe == null)
-            {
-                return NotFound();
-            }
-
-            var employe = await _context.Employe
-                .FirstOrDefaultAsync(m => m.Id == id);
-            if (employe == null)
-            {
-                return NotFound();
-            }
-
-            return View(employe);
-        }
-
-        // POST: Employees/Delete/5
-        [HttpPost, ActionName("Delete")]
-        [ValidateAntiForgeryToken]
-        public async Task<IActionResult> DeleteConfirmed(int id)
+        
+        [HttpPost]
+        public async Task<IActionResult> Delete(int id)
         {
             if (_context.Employe == null)
             {
                 return Problem("Entity set 'AppContext.Employe'  is null.");
             }
-            var employe = await _context.Employe.FindAsync(id);
+            var employe = await _context.Employe.Include(nameof(Person)).FirstOrDefaultAsync(m => m.Id == id);
             if (employe != null)
             {
+                _context.Person.Remove(employe.Person);
                 _context.Employe.Remove(employe);
+                
             }
 
             await _context.SaveChangesAsync();
             return RedirectToAction(nameof(Index));
         }
 
-        private bool EmployeExists(int id)
-        {
-            return _context.Employe.Any(e => e.Id == id);
-        }
     }
 }
Index: Data/AppContext.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing GestionEmploye.Models;\r\n\r\npublic class AppContext : DbContext\r\n{\r\n    public AppContext(DbContextOptions<AppContext> options)\r\n        : base(options)\r\n    {\r\n    }\r\n\r\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\r\n    {\r\n        modelBuilder.Entity<Employe>()\r\n        .HasOne(b => b.Person)\r\n        .WithOne(i => i.Employe)\r\n        .HasForeignKey<Person>(b => b.EmployeId);\r\n\r\n        modelBuilder.Entity<Admin>()\r\n        .HasOne(b => b.Person)\r\n        .WithOne(i => i.Admin)\r\n        .HasForeignKey<Person>(b => b.AdminId);\r\n\r\n        var conge = modelBuilder.Entity<Conge>();\r\n        conge\r\n            .HasOne(b => b.Employe)\r\n            .WithMany(i => i.Conges)\r\n            .HasForeignKey(b => b.EmployeId);\r\n\r\n        conge.Property(b => b.DemandeTime)\r\n        .HasDefaultValueSql(\"datetime()\");\r\n\r\n        var salary = modelBuilder.Entity<Salary>();\r\n        salary\r\n        .HasOne(b => b.Employe)\r\n        .WithMany(i => i.Salaries)\r\n        .HasForeignKey(b => b.EmployeId);\r\n\r\n\r\n    }\r\n\r\n    public DbSet<Employe> Employe { get; set; }\r\n    public DbSet<Person> Person { get; set; }\r\n    public DbSet<Admin> Admin { get; set; }\r\n\r\n    public DbSet<Conge> Conge { get; set; }\r\n    public DbSet<Salary> Salary { get; set; }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Data/AppContext.cs b/Data/AppContext.cs
--- a/Data/AppContext.cs	(revision 0607ccd50ff5b4742945904b10ea1190b00ae35c)
+++ b/Data/AppContext.cs	(date 1653578094940)
@@ -17,12 +17,14 @@
         modelBuilder.Entity<Employe>()
         .HasOne(b => b.Person)
         .WithOne(i => i.Employe)
-        .HasForeignKey<Person>(b => b.EmployeId);
+        .HasForeignKey<Person>(b => b.EmployeId)
+        .OnDelete(DeleteBehavior.Cascade);
 
         modelBuilder.Entity<Admin>()
         .HasOne(b => b.Person)
         .WithOne(i => i.Admin)
-        .HasForeignKey<Person>(b => b.AdminId);
+        .HasForeignKey<Person>(b => b.AdminId)
+        .OnDelete(DeleteBehavior.Cascade);
 
         var conge = modelBuilder.Entity<Conge>();
         conge
