Index: Controllers/AdminController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.AspNetCore.Mvc;\r\nusing GestionEmploye.Models;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing GestionEmploye.Helpers;\r\n\r\nnamespace GestionEmploye.Controllers;\r\n\r\n\r\n// [AuthorizationFilter(\"Admin\")]\r\npublic class AdminController : Controller\r\n{\r\n    private readonly AppContext _context;\r\n\r\n    public AdminController(AppContext context)\r\n    {\r\n        _context = context;\r\n    }\r\n\r\n    public IActionResult Index() {\r\n        ViewData[\"TotalEmployees\"] = _context.Employe.Count();\r\n        ViewData[\"TotalDemandeConges\"] = _context.Conge.Where(m=> m.Status == \"Pending\").Count();\r\n        ViewData[\"TotalSalaries\"] = _context.Salary.Where(m=> m.Month == DateTime.Now.Month).Count();\r\n        ViewData[\"Employees\"] = _context.Employe.Include(nameof(Person)).Take(10).ToList();\r\n        ViewData[\"PendingConges\"] = _context.Conge.Where(m => m.Status == \"Pending\").Take(10).ToList();\r\n        ViewData[\"CurrentConges\"] = _context.Conge.Where(m => m.Status == \"Accepted\" && m.Date < DateTime.Now && m.Date.AddDays(m.Duration) > DateTime.Now).Take(10).ToList();\r\n        ViewData[\"Salaries\"] = _context.Salary.Take(10).ToList();\r\n\r\n        return View();\r\n    }\r\n\r\n\r\n    public async Task<IActionResult> Employees(){\r\n        return View(\"Views/Admin/Employees/Index.cshtml\",await _context.Employe.ToListAsync());\r\n    }\r\n\r\n    [Route(\"/admin/employee/{id?}\")]\r\n    public IActionResult Employee(){\r\n        return View(\"Views/Admin/Employees/Create.cshtml\");\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controllers/AdminController.cs b/Controllers/AdminController.cs
--- a/Controllers/AdminController.cs	(revision faa0b5f191f3eba590e9b29dc80bb89378ab79c5)
+++ b/Controllers/AdminController.cs	(date 1653507881366)
@@ -19,7 +19,7 @@
     public IActionResult Index() {
         ViewData["TotalEmployees"] = _context.Employe.Count();
         ViewData["TotalDemandeConges"] = _context.Conge.Where(m=> m.Status == "Pending").Count();
-        ViewData["TotalSalaries"] = _context.Salary.Where(m=> m.Month == DateTime.Now.Month).Count();
+        ViewData["TotalSalaries"] = _context.Salary.Where(m=> m.Month.Month == DateTime.Now.Month).Count();
         ViewData["Employees"] = _context.Employe.Include(nameof(Person)).Take(10).ToList();
         ViewData["PendingConges"] = _context.Conge.Where(m => m.Status == "Pending").Take(10).ToList();
         ViewData["CurrentConges"] = _context.Conge.Where(m => m.Status == "Accepted" && m.Date < DateTime.Now && m.Date.AddDays(m.Duration) > DateTime.Now).Take(10).ToList();
Index: Views/Admin/Index.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@using System.Linq\r\n\r\n<link href=\"@Url.Content(\"~/css/admin.css\")\" rel=\"stylesheet\" type=\"text/css\" />\r\n\r\n@* @foreach(var employe in (List<Employe>) @ViewData[\"Employees\"]){ *@\r\n@*     <p>@employe.Person.Nom</p> *@\r\n@* } *@\r\n\r\n<h2>Dashboard</h2>\r\n<div class=\"d-flex gap-3 flex-wrap\">\r\n    <div class=\"admin-card p-4\">\r\n        <div class=\"icon rounded-circle\">\r\n            <svg viewBox=\"0 0 1129.000000 1280.000000\" style=\"transform: none;\">\r\n                <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\" fill=\"#fff\" stroke=\"none\">\r\n                    <path\r\n                        d=\"M7305 12790 c-607 -70 -1153 -365 -1531 -830 -201 -247 -361 -571 -433 -880 -25 -108 -48 -267 -55 -395 l-7 -100 79 -52 c264 -172 566 -475 751 -753 240 -359 369 -698 444 -1168 l12 -74 70 -30 c736 -313 1568 -210 2214 275 397 298 691 742 816 1231 79 312 88 678 24 996 -151 743 -672 1361 -1384 1640 -130 50 -292 94 -450 121 -138 23 -426 33 -550 19z\" />\r\n                    <path\r\n                        d=\"M3595 10489 c-331 -32 -675 -148 -966 -329 -543 -337 -915 -895 -1024 -1540 -22 -130 -31 -438 -16 -581 56 -538 297 -1028 687 -1398 644 -610 1587 -781 2408 -437 420 176 788 493 1036 891 204 328 330 773 330 1164 0 864 -501 1654 -1283 2026 -356 169 -772 242 -1172 204z\" />\r\n                    <path\r\n                        d=\"M6560 8138 c0 -77 -30 -309 -55 -433 -100 -495 -351 -977 -695 -1338 l-100 -105 67 -22 c480 -157 939 -429 1297 -769 318 -302 527 -584 716 -966 138 -280 227 -541 284 -835 50 -256 58 -365 63 -872 l5 -477 97 5 c774 41 1429 143 2056 320 335 95 741 245 886 329 43 25 85 45 94 45 14 0 16 116 12 1288 -3 1257 -3 1290 -24 1417 -85 515 -256 925 -555 1323 -113 152 -340 386 -478 496 -470 373 -997 580 -1593 626 -67 5 -562 10 -1099 10 l-978 0 0 -42z\" />\r\n                    <path\r\n                        d=\"M2680 5873 c-919 -58 -1751 -553 -2247 -1338 -204 -324 -336 -684 -406 -1110 -21 -127 -21 -159 -24 -1447 l-4 -1317 73 -21 c40 -12 163 -49 273 -82 1681 -501 3384 -669 4921 -483 869 105 1676 325 2226 606 l86 44 1 1258 c1 797 -3 1293 -9 1355 -35 330 -122 640 -259 927 -154 321 -335 571 -590 818 -401 386 -879 635 -1431 743 -243 48 -218 47 -1420 49 -624 1 -1160 0 -1190 -2z\" />\r\n                </g>\r\n            </svg>\r\n        </div>\r\n        <div>\r\n            <h2>Total des employés</h2>\r\n            <p class=\"value\">@ViewData[\"TotalEmployees\"]</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"admin-card p-4\">\r\n        <div class=\"icon rounded-circle\" style=\"--color:11,163,30\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"white\" class=\"dash-icons bi bi-bookmarks-fill\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M2 4a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L7 13.101l-4.223 2.815A.5.5 0 0 1 2 15.5V4z\"/>\r\n              <path d=\"M4.268 1A2 2 0 0 1 6 0h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L13 13.768V2a1 1 0 0 0-1-1H4.268z\"/>\r\n            </svg>\r\n            @* <svg viewBox=\"0 0 1129.000000 1280.000000\" style=\"transform: none;\"> *@\r\n            @*     <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\" fill=\"#fff\" stroke=\"none\"> *@\r\n            @*         <path *@\r\n            @*             d=\"M7305 12790 c-607 -70 -1153 -365 -1531 -830 -201 -247 -361 -571 -433 -880 -25 -108 -48 -267 -55 -395 l-7 -100 79 -52 c264 -172 566 -475 751 -753 240 -359 369 -698 444 -1168 l12 -74 70 -30 c736 -313 1568 -210 2214 275 397 298 691 742 816 1231 79 312 88 678 24 996 -151 743 -672 1361 -1384 1640 -130 50 -292 94 -450 121 -138 23 -426 33 -550 19z\"/> *@\r\n            @*         <path *@\r\n            @*             d=\"M3595 10489 c-331 -32 -675 -148 -966 -329 -543 -337 -915 -895 -1024 -1540 -22 -130 -31 -438 -16 -581 56 -538 297 -1028 687 -1398 644 -610 1587 -781 2408 -437 420 176 788 493 1036 891 204 328 330 773 330 1164 0 864 -501 1654 -1283 2026 -356 169 -772 242 -1172 204z\"/> *@\r\n            @*         <path *@\r\n            @*             d=\"M6560 8138 c0 -77 -30 -309 -55 -433 -100 -495 -351 -977 -695 -1338 l-100 -105 67 -22 c480 -157 939 -429 1297 -769 318 -302 527 -584 716 -966 138 -280 227 -541 284 -835 50 -256 58 -365 63 -872 l5 -477 97 5 c774 41 1429 143 2056 320 335 95 741 245 886 329 43 25 85 45 94 45 14 0 16 116 12 1288 -3 1257 -3 1290 -24 1417 -85 515 -256 925 -555 1323 -113 152 -340 386 -478 496 -470 373 -997 580 -1593 626 -67 5 -562 10 -1099 10 l-978 0 0 -42z\"/> *@\r\n            @*         <path *@\r\n            @*             d=\"M2680 5873 c-919 -58 -1751 -553 -2247 -1338 -204 -324 -336 -684 -406 -1110 -21 -127 -21 -159 -24 -1447 l-4 -1317 73 -21 c40 -12 163 -49 273 -82 1681 -501 3384 -669 4921 -483 869 105 1676 325 2226 606 l86 44 1 1258 c1 797 -3 1293 -9 1355 -35 330 -122 640 -259 927 -154 321 -335 571 -590 818 -401 386 -879 635 -1431 743 -243 48 -218 47 -1420 49 -624 1 -1160 0 -1190 -2z\"/> *@\r\n            @*     </g> *@\r\n            @* </svg> *@\r\n        </div>\r\n        <div>\r\n            <h2>Demandes de congés</h2>\r\n            <p class=\"value\">@ViewData[\"TotalDemandeConges\"]</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"admin-card p-4\">\r\n        <div class=\"icon rounded-circle\" style=\"--color:220,53,69\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"white\" class=\"dash-icons bi bi-piggy-bank-fill\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M7.964 1.527c-2.977 0-5.571 1.704-6.32 4.125h-.55A1 1 0 0 0 .11 6.824l.254 1.46a1.5 1.5 0 0 0 1.478 1.243h.263c.3.513.688.978 1.145 1.382l-.729 2.477a.5.5 0 0 0 .48.641h2a.5.5 0 0 0 .471-.332l.482-1.351c.635.173 1.31.267 2.011.267.707 0 1.388-.095 2.028-.272l.543 1.372a.5.5 0 0 0 .465.316h2a.5.5 0 0 0 .478-.645l-.761-2.506C13.81 9.895 14.5 8.559 14.5 7.069c0-.145-.007-.29-.02-.431.261-.11.508-.266.705-.444.315.306.815.306.815-.417 0 .223-.5.223-.461-.026a.95.95 0 0 0 .09-.255.7.7 0 0 0-.202-.645.58.58 0 0 0-.707-.098.735.735 0 0 0-.375.562c-.024.243.082.48.32.654a2.112 2.112 0 0 1-.259.153c-.534-2.664-3.284-4.595-6.442-4.595Zm7.173 3.876a.565.565 0 0 1-.098.21.704.704 0 0 1-.044-.025c-.146-.09-.157-.175-.152-.223a.236.236 0 0 1 .117-.173c.049-.027.08-.021.113.012a.202.202 0 0 1 .064.199Zm-8.999-.65a.5.5 0 1 1-.276-.96A7.613 7.613 0 0 1 7.964 3.5c.763 0 1.497.11 2.18.315a.5.5 0 1 1-.287.958A6.602 6.602 0 0 0 7.964 4.5c-.64 0-1.255.09-1.826.254ZM5 6.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\"/>\r\n            </svg>\r\n        </div>\r\n        <div>\r\n            <h2>Salaires pour @DateTime.Now.Month.ToString(\"D2\")/@DateTime.Now.Year</h2>\r\n            <p class=\"value\">@ViewData[\"TotalSalaries\"]</p>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n<div class=\"list card\">\r\n    <div class=\"card-body\">\r\n            <h2 class=\"card-title\">Liste des Employés</h2>\r\n            <hr class=\"sep\"/>\r\n        </div>\r\n    <div class=\"employe-list card-body\">\r\n        \r\n        @if (((List<Employe>) ViewBag.Employees).Count != 0)\r\n        {\r\n            <table class=\"admin-tables table table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Nom</th>\r\n                    <th scope=\"col\">Prenom</th>\r\n                    <th scope=\"col\">E-mail</th>\r\n                    <th scope=\"col\">Durée congé</th>\r\n                    <th scope=\"col\">Montant salaire</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                @foreach (var employe in (List<Employe>) ViewData[\"Employees\"])\r\n                {\r\n                    <tr>\r\n                        <th scope=\"row\">@employe.PersonId</th>\r\n                        <td>@employe.Person.Nom</td>\r\n                        <td>@employe.Person.Prenom</td>\r\n                        <td>@employe.Person.Email</td>\r\n                        <td>@employe.CongeRemaining</td>\r\n                        <td>@employe.CurrentSalary</td>\r\n                    </tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n        }\r\n        else\r\n        {\r\n            <p><pre class=\"fw-bold fs-5\">Rien à afficher ici -</pre></p>\r\n        }\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card\" style=\"margin-top: 3.0em;background-color: transparent\">\r\n    <div class=\"card-body\">\r\n        <h2 class=\"card-title\">Liste des Congés</h2>\r\n        <hr class=\"sep\"/>\r\n    </div>\r\n\r\n    <div class=\"list card-body\">\r\n        <h4 class=\"card-subtitle\"><strong>En demande</strong></h4>\r\n        <div class=\"conge-list card-body\">\r\n            @if (((List<Conge>) ViewBag.PendingConges).Count != 0)\r\n            {\r\n                <table class=\"admin-tables table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Id employé</th>\r\n                        <th scope=\"col\">Nom employé</th>\r\n                        <th scope=\"col\">Prenom employé</th>\r\n                        <th scope=\"col\">Durée</th>\r\n                        <th scope=\"col\">Début congé</th>\r\n                        <th scope=\"col\">Temps restant</th>\r\n                        <th scope=\"col\">Status</th>\r\n                    </tr>\r\n                    </thead>\r\n            \r\n                    <tbody>\r\n                    @foreach (var conge in ((List<Conge>) ViewData[\"PendingConges\"])!)\r\n                    {\r\n                        <tr>\r\n                            <th scope=\"row\">@conge.Id</th>\r\n                            <td>@conge.EmployeId</td>\r\n                            <td>@conge.Employe.Person.Nom</td>\r\n                            <td>@conge.Employe.Person.Prenom</td>\r\n                            <td>@conge.Duration</td>\r\n                            <td>@conge.DemandeTime</td>\r\n                            <td>@conge.Employe.CongeRemaining</td>\r\n                            <td class=\"status\">@conge.Status</td>\r\n                        </tr>\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            }\r\n            else\r\n            {\r\n                <p><pre class=\"fw-bold fs-6\">Rien à afficher ici -</pre></p>\r\n            }\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"list card-body\">\r\n        <h4 class=\"card-subtitle\"><strong>En cours</strong></h4>\r\n        <div class=\"conge-list card-body\">\r\n            \r\n            @if (((List<Conge>) ViewBag.CurrentConges).Count != 0)\r\n            {\r\n                <table class=\"admin-tables table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Id employé</th>\r\n                        <th scope=\"col\">Nom employé</th>\r\n                        <th scope=\"col\">Prenom employé</th>\r\n                        <th scope=\"col\">Durée</th>\r\n                        <th scope=\"col\">Début congé</th>\r\n                        <th scope=\"col\">Temps restant</th>\r\n                        <th scope=\"col\">Status</th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                    @foreach (var conge in ((List<Conge>) ViewData[\"CurrentConges\"])!)\r\n                    {\r\n                        <tr>\r\n                            <th scope=\"row\">@conge.Id</th>\r\n                            <td>@conge.EmployeId</td>\r\n                            <td>@conge.Employe.Person.Nom</td>\r\n                            <td>@conge.Employe.Person.Prenom</td>\r\n                            <td>@conge.Duration</td>\r\n                            <td>@conge.DemandeTime</td>\r\n                            <td>@conge.Employe.CongeRemaining</td>\r\n                            <td class=\"status\">@conge.Status</td>\r\n                        </tr>\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            }\r\n            else\r\n            {\r\n                <p><pre class=\"fw-bold fs-6\">Rien à afficher ici -</pre></p>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"list card\">\r\n    <div class=\"card-body\">\r\n            <h2 class=\"card-title\">Liste des Paiements</h2>\r\n            <hr class=\"sep\"/>\r\n        </div>\r\n    <div class=\"paie-list card-body\">\r\n        \r\n        <!-- TODO -->\r\n        @if (((List<Salary>) ViewData[\"Salaries\"]).Count != 0)\r\n        {\r\n            <table class=\"admin-tables table table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Id employé</th>\r\n                    <th scope=\"col\">Nom employé</th>\r\n                    <th scope=\"col\">Prenom employé</th>\r\n                    <th scope=\"col\">Montant</th>\r\n                    <th scope=\"col\">Mois</th>\r\n                    <th scope=\"col\">Année</th>\r\n                    <th scope=\"col\">Status</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                @foreach (var salary in ((List<Salary>) ViewData[\"Salaries\"])!)\r\n                {\r\n                    <tr>\r\n                        <th scope=\"row\">@salary.Id</th>\r\n                        <td>@salary.EmployeId</td>\r\n                        <td>@salary.Employe.Person.Nom</td>\r\n                        <td>@salary.Employe.Person.Prenom</td>\r\n                        <td>@salary.Amount</td>\r\n                        <td>@salary.Month</td>\r\n                        <td>@salary.Year</td>\r\n                        <td class=\"status\">@salary.Status</td>\r\n                    </tr>\r\n                }\r\n                </tbody>\r\n            </table>\r\n        }\r\n        else\r\n        {\r\n            <p><pre class=\"fw-bold fs-5\">Rien à afficher ici -</pre></p>\r\n        }\r\n    </div>\r\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Admin/Index.cshtml b/Views/Admin/Index.cshtml
--- a/Views/Admin/Index.cshtml	(revision faa0b5f191f3eba590e9b29dc80bb89378ab79c5)
+++ b/Views/Admin/Index.cshtml	(date 1653507881379)
@@ -237,8 +237,8 @@
                         <td>@salary.Employe.Person.Nom</td>
                         <td>@salary.Employe.Person.Prenom</td>
                         <td>@salary.Amount</td>
-                        <td>@salary.Month</td>
-                        <td>@salary.Year</td>
+                        <td>@salary.Month.Month</td>
+                        <td>@salary.Month.Year</td>
                         <td class="status">@salary.Status</td>
                     </tr>
                 }
Index: Controllers/EmployeesController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.Rendering;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing GestionEmploye.Models;\r\n\r\nnamespace GestionEmploye.Controllers\r\n{\r\n    public class EmployeesController : Controller\r\n    {\r\n        private readonly AppContext _context;\r\n\r\n        public EmployeesController(AppContext context)\r\n        {\r\n            _context = context;\r\n        }\r\n\r\n        // GET: Employees\r\n        public async Task<IActionResult> Index()\r\n        {\r\n            ViewData[\"Employees\"] = await _context.Employe.Include(nameof(Person)).ToListAsync();\r\n              return View();\r\n        }\r\n\r\n        // GET: Employees/Details/5\r\n        public async Task<IActionResult> Details(int? id)\r\n        {\r\n            if (id == null || _context.Employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            var employe = await _context.Employe\r\n                .FirstOrDefaultAsync(m => m.Id == id);\r\n            if (employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            return View(employe);\r\n        }\r\n\r\n        // GET: Employees/Create\r\n        public IActionResult Create()\r\n        {\r\n            return View();\r\n        }\r\n\r\n        // POST: Employees/Create\r\n        // To protect from overposting attacks, enable the specific properties you want to bind to.\r\n        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.\r\n        [HttpPost]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task<IActionResult> Create([Bind(\"Id,PersonId,CongeRemaining,CurrentSalary\")] Employe employe)\r\n        {\r\n            if (ModelState.IsValid)\r\n            {\r\n                _context.Add(employe);\r\n                await _context.SaveChangesAsync();\r\n                return RedirectToAction(nameof(Index));\r\n            }\r\n            return View(employe);\r\n        }\r\n\r\n        // GET: Employees/Edit/5\r\n        public async Task<IActionResult> Edit(int? id)\r\n        {\r\n            if (id == null || _context.Employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            var employe = await _context.Employe.FindAsync(id);\r\n            if (employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n            return View(employe);\r\n        }\r\n\r\n        // POST: Employees/Edit/5\r\n        // To protect from overposting attacks, enable the specific properties you want to bind to.\r\n        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.\r\n        [HttpPost]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task<IActionResult> Edit(int id, [Bind(\"Id,PersonId,CongeRemaining,CurrentSalary\")] Employe employe)\r\n        {\r\n            if (id != employe.Id)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            if (ModelState.IsValid)\r\n            {\r\n                try\r\n                {\r\n                    _context.Update(employe);\r\n                    await _context.SaveChangesAsync();\r\n                }\r\n                catch (DbUpdateConcurrencyException)\r\n                {\r\n                    if (!EmployeExists(employe.Id))\r\n                    {\r\n                        return NotFound();\r\n                    }\r\n                    else\r\n                    {\r\n                        throw;\r\n                    }\r\n                }\r\n                return RedirectToAction(nameof(Index));\r\n            }\r\n            return View(employe);\r\n        }\r\n\r\n        // GET: Employees/Delete/5\r\n        public async Task<IActionResult> Delete(int? id)\r\n        {\r\n            if (id == null || _context.Employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            var employe = await _context.Employe\r\n                .FirstOrDefaultAsync(m => m.Id == id);\r\n            if (employe == null)\r\n            {\r\n                return NotFound();\r\n            }\r\n\r\n            return View(employe);\r\n        }\r\n\r\n        // POST: Employees/Delete/5\r\n        [HttpPost, ActionName(\"Delete\")]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task<IActionResult> DeleteConfirmed(int id)\r\n        {\r\n            if (_context.Employe == null)\r\n            {\r\n                return Problem(\"Entity set 'AppContext.Employe'  is null.\");\r\n            }\r\n            var employe = await _context.Employe.FindAsync(id);\r\n            if (employe != null)\r\n            {\r\n                _context.Employe.Remove(employe);\r\n            }\r\n            \r\n            await _context.SaveChangesAsync();\r\n            return RedirectToAction(nameof(Index));\r\n        }\r\n\r\n        private bool EmployeExists(int id)\r\n        {\r\n          return _context.Employe.Any(e => e.Id == id);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controllers/EmployeesController.cs b/Controllers/EmployeesController.cs
--- a/Controllers/EmployeesController.cs	(revision faa0b5f191f3eba590e9b29dc80bb89378ab79c5)
+++ b/Controllers/EmployeesController.cs	(date 1653507881367)
@@ -22,7 +22,7 @@
         public async Task<IActionResult> Index()
         {
             ViewData["Employees"] = await _context.Employe.Include(nameof(Person)).ToListAsync();
-              return View();
+            return View();
         }
 
         // GET: Employees/Details/5
@@ -148,14 +148,14 @@
             {
                 _context.Employe.Remove(employe);
             }
-            
+
             await _context.SaveChangesAsync();
             return RedirectToAction(nameof(Index));
         }
 
         private bool EmployeExists(int id)
         {
-          return _context.Employe.Any(e => e.Id == id);
+            return _context.Employe.Any(e => e.Id == id);
         }
     }
 }
Index: Views/Shared/_Layout.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@using Microsoft.AspNetCore.Http;\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <style>\r\n        .profile{\r\n            transform: scale(1.5,1.5);\r\n        }\r\n    </style>\r\n    <meta charset=\"utf-8\"/>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n    <title>@ViewData[\"Title\"] - GestionEmploye</title>\r\n    <link rel=\"stylesheet\" href=\"~/lib/bootstrap/dist/css/bootstrap.min.css\"/>\r\n    <script src=\"https://kit.fontawesome.com/cb23c1ae28.js\" crossorigin=\"anonymous\"></script>\r\n\r\n    <link rel=\"stylesheet\" href=\"~/css/root.css\" asp-append-version=\"true\"/>\r\n    <link rel=\"stylesheet\" href=\"~/css/site.css\" asp-append-version=\"true\"/>\r\n    <link rel=\"stylesheet\" href=\"~/GestionEmploye.styles.css\" asp-append-version=\"true\"/>\r\n</head>\r\n<body>\r\n    <header>\r\n        <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n            <div class=\"container-fluid\">\r\n                <a class=\"navbar-brand\" asp-area=\"\" asp-controller=\"Home\" asp-action=\"Index\">GestionEmploye</a>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                    <ul class=\"nav nav-pills mx-auto me-auto mb-2 mb-lg-0\" id=\"v-pills-tab\" role=\"tablist\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link py-2 mx-2 px-4\" style=\"background-color: #0d6efd29;\" asp-area=\"\" asp-controller=\"Employees\" asp-action=\"Index\">Employés</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link py-2 mx-2 px-4\" asp-area=\"\" asp-controller=\"Home\" asp-action=\"Index\">Congés</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link py-2 mx-2 px-4\" asp-area=\"\" asp-controller=\"Home\" asp-action=\"Index\">Paiements</a>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    <a class=\"mx-2 px-3 btn btn-outline-success d-flex gap-3 align-items-center text-capitalize py-2 px-1\" style=\"border-radius: 20px\" asp-controller=\"Admin\" asp-action=\"Index\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"profile bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n                          <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\r\n                          <path fill-rule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"/>\r\n                        </svg>\r\n                        @Context.Session.GetString(\"Nom\")\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n    <div class=\"container\">\r\n        <main role=\"main\" class=\"pb-3\">\r\n            @RenderBody()\r\n        </main>\r\n    </div>\r\n\r\n    <footer class=\"border-top footer text-muted\">\r\n        <div class=\"container\">\r\n            &copy; 2022 - GestionEmploye - <a asp-area=\"\" asp-controller=\"Home\" asp-action=\"Privacy\">Privacy</a>\r\n        </div>\r\n    </footer>\r\n    <script src=\"~/lib/jquery/dist/jquery.min.js\"></script>\r\n    <script src=\"~/lib/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\r\n    <script src=\"~/js/site.js\" asp-append-version=\"true\"></script>\r\n    <script src=\"~/js/nav.js\" asp-append-version=\"true\"></script>\r\n    @await RenderSectionAsync(\"Scripts\", required: false)\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Shared/_Layout.cshtml b/Views/Shared/_Layout.cshtml
--- a/Views/Shared/_Layout.cshtml	(revision faa0b5f191f3eba590e9b29dc80bb89378ab79c5)
+++ b/Views/Shared/_Layout.cshtml	(date 1653507881385)
@@ -28,13 +28,13 @@
                 <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                     <ul class="nav nav-pills mx-auto me-auto mb-2 mb-lg-0" id="v-pills-tab" role="tablist">
                         <li class="nav-item">
-                            <a class="nav-link py-2 mx-2 px-4" style="background-color: #0d6efd29;" asp-area="" asp-controller="Employees" asp-action="Index">Employés</a>
+                            <a class="nav-link py-2 mx-2 px-4" style='@(Context.Request.Path.ToString().ToLower().StartsWith("/employees") ? "background-color: #0d6efd29;":"")' asp-area="" asp-controller="Employees" asp-action="Index">Employés</a>
                         </li>
                         <li class="nav-item">
-                            <a class="nav-link py-2 mx-2 px-4" asp-area="" asp-controller="Home" asp-action="Index">Congés</a>
+                            <a class="nav-link py-2 mx-2 px-4" style='@(Context.Request.Path.ToString().ToLower().StartsWith("/conges") ? "background-color: #0d6efd29;":"")' asp-area="" asp-controller="Home" asp-action="Index">Congés</a>
                         </li>
                         <li class="nav-item">
-                            <a class="nav-link py-2 mx-2 px-4" asp-area="" asp-controller="Home" asp-action="Index">Paiements</a>
+                            <a class="nav-link py-2 mx-2 px-4" style='@(Context.Request.Path.ToString().ToLower().StartsWith("/salaries") ? "background-color: #0d6efd29;":"")' asp-area="" asp-controller="Salaries" asp-action="Index">Paiements</a>
                         </li>
                     </ul>
                     
Index: Models/Conge.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.ComponentModel;\r\nusing System.ComponentModel.DataAnnotations;\r\n\r\nnamespace GestionEmploye.Models\r\n{\r\n    public class Conge\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        [Required]\r\n        [DataType(DataType.Date)]\r\n        public DateTime Date { get; set; }\r\n        \r\n        [Required]\r\n        [DataType(DataType.DateTime)]\r\n        public DateTime DemandeTime { get; set; }\r\n\r\n        [Range(1,30)]\r\n        [Required]\r\n        public int Duration { get; set; }\r\n\r\n        [DefaultValue(0)]\r\n        [RegularExpression(\"Pending|Accepted|Declined\", ErrorMessage = \"Invalid Status\")]\r\n        public string Status { get; set; }\r\n\r\n        [Required]\r\n        public int EmployeId {get; set;}\r\n\r\n        [Required]\r\n        public Employe Employe {get; set;}\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Conge.cs b/Models/Conge.cs
--- a/Models/Conge.cs	(revision faa0b5f191f3eba590e9b29dc80bb89378ab79c5)
+++ b/Models/Conge.cs	(date 1653507881377)
@@ -26,7 +26,6 @@
         [Required]
         public int EmployeId {get; set;}
 
-        [Required]
         public Employe Employe {get; set;}
 
     }
Index: Views/Salaries/Create.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Salaries/Create.cshtml b/Views/Salaries/Create.cshtml
new file mode 100644
--- /dev/null	(date 1653507881380)
+++ b/Views/Salaries/Create.cshtml	(date 1653507881380)
@@ -0,0 +1,47 @@
+@model GestionEmploye.Models.Salary
+
+@{
+    ViewData["Title"] = "Create";
+}
+
+<h1>Create</h1>
+
+<h4>Salary</h4>
+<hr />
+<div class="row">
+    <div class="col-md-4">
+        <form asp-action="Create">
+            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
+            <div class="form-group">
+                <label asp-for="Amount" class="control-label"></label>
+                <input asp-for="Amount" class="form-control" />
+                <span asp-validation-for="Amount" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="Month" class="control-label"></label>
+                <input asp-for="Month" class="form-control" />
+                <span asp-validation-for="Month" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="Status" class="control-label"></label>
+                <input asp-for="Status" class="form-control" />
+                <span asp-validation-for="Status" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="EmployeId" class="control-label"></label>
+                <select asp-for="EmployeId" class ="form-control" asp-items="ViewBag.EmployeId"></select>
+            </div>
+            <div class="form-group">
+                <input type="submit" value="Create" class="btn btn-primary" />
+            </div>
+        </form>
+    </div>
+</div>
+
+<div>
+    <a asp-action="Index">Back to List</a>
+</div>
+
+@section Scripts {
+    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
+}
Index: Views/Salaries/Delete.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Salaries/Delete.cshtml b/Views/Salaries/Delete.cshtml
new file mode 100644
--- /dev/null	(date 1653507881381)
+++ b/Views/Salaries/Delete.cshtml	(date 1653507881381)
@@ -0,0 +1,45 @@
+@model GestionEmploye.Models.Salary
+
+@{
+    ViewData["Title"] = "Delete";
+}
+
+<h1>Delete</h1>
+
+<h3>Are you sure you want to delete this?</h3>
+<div>
+    <h4>Salary</h4>
+    <hr />
+    <dl class="row">
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Amount)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Amount)
+        </dd>
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Month)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Month)
+        </dd>
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Status)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Status)
+        </dd>
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Employe)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Employe.Id)
+        </dd>
+    </dl>
+    
+    <form asp-action="Delete">
+        <input type="hidden" asp-for="Id" />
+        <input type="submit" value="Delete" class="btn btn-danger" /> |
+        <a asp-action="Index">Back to List</a>
+    </form>
+</div>
Index: Views/Salaries/Details.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Salaries/Details.cshtml b/Views/Salaries/Details.cshtml
new file mode 100644
--- /dev/null	(date 1653507881382)
+++ b/Views/Salaries/Details.cshtml	(date 1653507881382)
@@ -0,0 +1,42 @@
+@model GestionEmploye.Models.Salary
+
+@{
+    ViewData["Title"] = "Details";
+}
+
+<h1>Details</h1>
+
+<div>
+    <h4>Salary</h4>
+    <hr />
+    <dl class="row">
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Amount)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Amount)
+        </dd>
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Month)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Month)
+        </dd>
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Status)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Status)
+        </dd>
+        <dt class = "col-sm-2">
+            @Html.DisplayNameFor(model => model.Employe)
+        </dt>
+        <dd class = "col-sm-10">
+            @Html.DisplayFor(model => model.Employe.Id)
+        </dd>
+    </dl>
+</div>
+<div>
+    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
+    <a asp-action="Index">Back to List</a>
+</div>
Index: Views/Salaries/Edit.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Salaries/Edit.cshtml b/Views/Salaries/Edit.cshtml
new file mode 100644
--- /dev/null	(date 1653507881383)
+++ b/Views/Salaries/Edit.cshtml	(date 1653507881383)
@@ -0,0 +1,49 @@
+@model GestionEmploye.Models.Salary
+
+@{
+    ViewData["Title"] = "Edit";
+}
+
+<h1>Edit</h1>
+
+<h4>Salary</h4>
+<hr />
+<div class="row">
+    <div class="col-md-4">
+        <form asp-action="Edit">
+            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
+            <input type="hidden" asp-for="Id" />
+            <div class="form-group">
+                <label asp-for="Amount" class="control-label"></label>
+                <input asp-for="Amount" class="form-control" />
+                <span asp-validation-for="Amount" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="Month" class="control-label"></label>
+                <input asp-for="Month" class="form-control" />
+                <span asp-validation-for="Month" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="Status" class="control-label"></label>
+                <input asp-for="Status" class="form-control" />
+                <span asp-validation-for="Status" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <label asp-for="EmployeId" class="control-label"></label>
+                <select asp-for="EmployeId" class="form-control" asp-items="ViewBag.EmployeId"></select>
+                <span asp-validation-for="EmployeId" class="text-danger"></span>
+            </div>
+            <div class="form-group">
+                <input type="submit" value="Save" class="btn btn-primary" />
+            </div>
+        </form>
+    </div>
+</div>
+
+<div>
+    <a asp-action="Index">Back to List</a>
+</div>
+
+@section Scripts {
+    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
+}
Index: Views/Salaries/Index.cshtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Views/Salaries/Index.cshtml b/Views/Salaries/Index.cshtml
new file mode 100644
--- /dev/null	(date 1653507881383)
+++ b/Views/Salaries/Index.cshtml	(date 1653507881383)
@@ -0,0 +1,63 @@
+@model GestionEmploye.Models.Salary
+
+@{
+    ViewData["Title"] = "Index";
+}
+
+<h1>Paiements</h1>
+
+<form asp-action="Create" class="mb-3">
+    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
+
+    <div class="form-group">
+        <label asp-for="EmployeId" class="control-label"></label>
+        <select asp-for="EmployeId" class="form-control" asp-items="ViewBag.EmployeId"
+            style="text-transform: capitalize"></select>
+    </div>
+    <div class="d-flex gap-3 flex-wrap py-4">
+    <div class="form-group flex-grow-1">
+        <label asp-for="Amount" class="control-label"></label>
+        <input asp-for="Amount" class="form-control" />
+        <span asp-validation-for="Amount" class="text-danger"></span>
+    </div>
+        <div class="form-group flex-grow-1">
+            <label asp-for="Month" class="control-label"></label>
+            <input asp-for="Month" class="form-control" type="month" />
+            <span asp-validation-for="Month" class="text-danger"></span>
+        </div>
+        <div class="form-group flex-grow-1">
+            <label asp-for="Status" class="control-label"></label>
+            <select asp-for="Status" class="form-control" asp-items="ViewBag.StatusList"></select>
+            <span asp-validation-for="Status" class="text-danger"></span>
+        </div>
+    </div>
+    <div class="form-group d-flex justify-content-end">
+        <input type="submit" value="Ajouter" class="btn btn-primary" />
+    </div>
+</form>
+
+<table class="table">
+    <thead>
+        <tr>
+            <th>
+                @Html.DisplayNameFor(model => model.Amount)
+            </th>
+            <th>
+                @Html.DisplayNameFor(model => model.Month)
+            </th>
+            <th>
+                @Html.DisplayNameFor(model => model.Status)
+            </th>
+            <th>
+                @Html.DisplayNameFor(model => model.Employe)
+            </th>
+            <th></th>
+        </tr>
+    </thead>
+    <tbody>
+        @foreach (var item in  ((List<Salary>) ViewData["Salaries"]))
+        {
+            @item.Amount
+        }
+    </tbody>
+</table>
Index: Migrations/20220525193957_ChangeSalary3.Designer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/20220525193957_ChangeSalary3.Designer.cs b/Migrations/20220525193957_ChangeSalary3.Designer.cs
new file mode 100644
--- /dev/null	(date 1653507881374)
+++ b/Migrations/20220525193957_ChangeSalary3.Designer.cs	(date 1653507881374)
@@ -0,0 +1,205 @@
+// <auto-generated />
+using System;
+using Microsoft.EntityFrameworkCore;
+using Microsoft.EntityFrameworkCore.Infrastructure;
+using Microsoft.EntityFrameworkCore.Migrations;
+using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
+
+#nullable disable
+
+namespace GestionEmploye.Migrations
+{
+    [DbContext(typeof(AppContext))]
+    [Migration("20220525193957_ChangeSalary3")]
+    partial class ChangeSalary3
+    {
+        protected override void BuildTargetModel(ModelBuilder modelBuilder)
+        {
+#pragma warning disable 612, 618
+            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");
+
+            modelBuilder.Entity("GestionEmploye.Models.Admin", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("PersonId")
+                        .HasColumnType("INTEGER");
+
+                    b.HasKey("Id");
+
+                    b.ToTable("Admin");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<DateTime>("Date")
+                        .HasColumnType("TEXT");
+
+                    b.Property<DateTime>("DemandeTime")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("TEXT")
+                        .HasDefaultValueSql("datetime()");
+
+                    b.Property<int>("Duration")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Status")
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("EmployeId");
+
+                    b.ToTable("Conge");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("CongeRemaining")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<float>("CurrentSalary")
+                        .HasColumnType("REAL");
+
+                    b.Property<int>("PersonId")
+                        .HasColumnType("INTEGER");
+
+                    b.HasKey("Id");
+
+                    b.ToTable("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Person", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int?>("AdminId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Email")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<int?>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Nom")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Password")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Prenom")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("AdminId")
+                        .IsUnique();
+
+                    b.HasIndex("EmployeId")
+                        .IsUnique();
+
+                    b.ToTable("Person");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Salary", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<float>("Amount")
+                        .HasColumnType("REAL");
+
+                    b.Property<int>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<DateTime>("Month")
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Status")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("EmployeId");
+
+                    b.ToTable("Salary");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithMany("Conges")
+                        .HasForeignKey("EmployeId")
+                        .OnDelete(DeleteBehavior.Cascade)
+                        .IsRequired();
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Person", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Admin", "Admin")
+                        .WithOne("Person")
+                        .HasForeignKey("GestionEmploye.Models.Person", "AdminId");
+
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithOne("Person")
+                        .HasForeignKey("GestionEmploye.Models.Person", "EmployeId");
+
+                    b.Navigation("Admin");
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Salary", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithMany("Salaries")
+                        .HasForeignKey("EmployeId")
+                        .OnDelete(DeleteBehavior.Cascade)
+                        .IsRequired();
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Admin", b =>
+                {
+                    b.Navigation("Person")
+                        .IsRequired();
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
+                {
+                    b.Navigation("Conges");
+
+                    b.Navigation("Person")
+                        .IsRequired();
+
+                    b.Navigation("Salaries");
+                });
+#pragma warning restore 612, 618
+        }
+    }
+}
Index: Migrations/20220525193957_ChangeSalary3.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/20220525193957_ChangeSalary3.cs b/Migrations/20220525193957_ChangeSalary3.cs
new file mode 100644
--- /dev/null	(date 1653507881375)
+++ b/Migrations/20220525193957_ChangeSalary3.cs	(date 1653507881375)
@@ -0,0 +1,19 @@
+using Microsoft.EntityFrameworkCore.Migrations;
+
+#nullable disable
+
+namespace GestionEmploye.Migrations
+{
+    public partial class ChangeSalary3 : Migration
+    {
+        protected override void Up(MigrationBuilder migrationBuilder)
+        {
+
+        }
+
+        protected override void Down(MigrationBuilder migrationBuilder)
+        {
+
+        }
+    }
+}
Index: Migrations/20220525191904_ChangeSalary.Designer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/20220525191904_ChangeSalary.Designer.cs b/Migrations/20220525191904_ChangeSalary.Designer.cs
new file mode 100644
--- /dev/null	(date 1653507881370)
+++ b/Migrations/20220525191904_ChangeSalary.Designer.cs	(date 1653507881370)
@@ -0,0 +1,205 @@
+// <auto-generated />
+using System;
+using Microsoft.EntityFrameworkCore;
+using Microsoft.EntityFrameworkCore.Infrastructure;
+using Microsoft.EntityFrameworkCore.Migrations;
+using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
+
+#nullable disable
+
+namespace GestionEmploye.Migrations
+{
+    [DbContext(typeof(AppContext))]
+    [Migration("20220525191904_ChangeSalary")]
+    partial class ChangeSalary
+    {
+        protected override void BuildTargetModel(ModelBuilder modelBuilder)
+        {
+#pragma warning disable 612, 618
+            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");
+
+            modelBuilder.Entity("GestionEmploye.Models.Admin", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("PersonId")
+                        .HasColumnType("INTEGER");
+
+                    b.HasKey("Id");
+
+                    b.ToTable("Admin");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<DateTime>("Date")
+                        .HasColumnType("TEXT");
+
+                    b.Property<DateTime>("DemandeTime")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("TEXT")
+                        .HasDefaultValueSql("datetime()");
+
+                    b.Property<int>("Duration")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Status")
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("EmployeId");
+
+                    b.ToTable("Conge");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("CongeRemaining")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<float>("CurrentSalary")
+                        .HasColumnType("REAL");
+
+                    b.Property<int>("PersonId")
+                        .HasColumnType("INTEGER");
+
+                    b.HasKey("Id");
+
+                    b.ToTable("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Person", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int?>("AdminId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Email")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<int?>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Nom")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Password")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Prenom")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("AdminId")
+                        .IsUnique();
+
+                    b.HasIndex("EmployeId")
+                        .IsUnique();
+
+                    b.ToTable("Person");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Salary", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<float>("Amount")
+                        .HasColumnType("REAL");
+
+                    b.Property<int>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("Month")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Status")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("EmployeId");
+
+                    b.ToTable("Salary");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithMany("Conges")
+                        .HasForeignKey("EmployeId")
+                        .OnDelete(DeleteBehavior.Cascade)
+                        .IsRequired();
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Person", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Admin", "Admin")
+                        .WithOne("Person")
+                        .HasForeignKey("GestionEmploye.Models.Person", "AdminId");
+
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithOne("Person")
+                        .HasForeignKey("GestionEmploye.Models.Person", "EmployeId");
+
+                    b.Navigation("Admin");
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Salary", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithMany("Salaries")
+                        .HasForeignKey("EmployeId")
+                        .OnDelete(DeleteBehavior.Cascade)
+                        .IsRequired();
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Admin", b =>
+                {
+                    b.Navigation("Person")
+                        .IsRequired();
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
+                {
+                    b.Navigation("Conges");
+
+                    b.Navigation("Person")
+                        .IsRequired();
+
+                    b.Navigation("Salaries");
+                });
+#pragma warning restore 612, 618
+        }
+    }
+}
Index: Migrations/AppContextModelSnapshot.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// <auto-generated />\r\nusing System;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.EntityFrameworkCore.Infrastructure;\r\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\r\n\r\n#nullable disable\r\n\r\nnamespace GestionEmploye.Migrations\r\n{\r\n    [DbContext(typeof(AppContext))]\r\n    partial class AppContextModelSnapshot : ModelSnapshot\r\n    {\r\n        protected override void BuildModel(ModelBuilder modelBuilder)\r\n        {\r\n#pragma warning disable 612, 618\r\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"6.0.5\");\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Admin\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int>(\"PersonId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.ToTable(\"Admin\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Conge\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<DateTime>(\"Date\")\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<DateTime>(\"DemandeTime\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"TEXT\")\r\n                        .HasDefaultValueSql(\"datetime()\");\r\n\r\n                    b.Property<int>(\"Duration\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int>(\"EmployeId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<string>(\"Status\")\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.HasIndex(\"EmployeId\");\r\n\r\n                    b.ToTable(\"Conge\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Employe\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int>(\"CongeRemaining\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<float>(\"CurrentSalary\")\r\n                        .HasColumnType(\"REAL\");\r\n\r\n                    b.Property<int>(\"PersonId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.ToTable(\"Employe\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Person\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int?>(\"AdminId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<string>(\"Email\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<int?>(\"EmployeId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<string>(\"Nom\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<string>(\"Password\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<string>(\"Prenom\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.HasIndex(\"AdminId\")\r\n                        .IsUnique();\r\n\r\n                    b.HasIndex(\"EmployeId\")\r\n                        .IsUnique();\r\n\r\n                    b.ToTable(\"Person\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Salary\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<float>(\"Amount\")\r\n                        .HasColumnType(\"REAL\");\r\n\r\n                    b.Property<int>(\"EmployeId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int>(\"Month\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<string>(\"Status\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<int>(\"Year\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.HasIndex(\"EmployeId\");\r\n\r\n                    b.ToTable(\"Salary\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Conge\", b =>\r\n                {\r\n                    b.HasOne(\"GestionEmploye.Models.Employe\", \"Employe\")\r\n                        .WithMany(\"Conges\")\r\n                        .HasForeignKey(\"EmployeId\")\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.Navigation(\"Employe\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Person\", b =>\r\n                {\r\n                    b.HasOne(\"GestionEmploye.Models.Admin\", \"Admin\")\r\n                        .WithOne(\"Person\")\r\n                        .HasForeignKey(\"GestionEmploye.Models.Person\", \"AdminId\");\r\n\r\n                    b.HasOne(\"GestionEmploye.Models.Employe\", \"Employe\")\r\n                        .WithOne(\"Person\")\r\n                        .HasForeignKey(\"GestionEmploye.Models.Person\", \"EmployeId\");\r\n\r\n                    b.Navigation(\"Admin\");\r\n\r\n                    b.Navigation(\"Employe\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Salary\", b =>\r\n                {\r\n                    b.HasOne(\"GestionEmploye.Models.Employe\", \"Employe\")\r\n                        .WithMany(\"Salaries\")\r\n                        .HasForeignKey(\"EmployeId\")\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.Navigation(\"Employe\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Admin\", b =>\r\n                {\r\n                    b.Navigation(\"Person\")\r\n                        .IsRequired();\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Employe\", b =>\r\n                {\r\n                    b.Navigation(\"Conges\");\r\n\r\n                    b.Navigation(\"Person\")\r\n                        .IsRequired();\r\n\r\n                    b.Navigation(\"Salaries\");\r\n                });\r\n#pragma warning restore 612, 618\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/AppContextModelSnapshot.cs b/Migrations/AppContextModelSnapshot.cs
--- a/Migrations/AppContextModelSnapshot.cs	(revision faa0b5f191f3eba590e9b29dc80bb89378ab79c5)
+++ b/Migrations/AppContextModelSnapshot.cs	(date 1653507881376)
@@ -131,16 +131,13 @@
                     b.Property<int>("EmployeId")
                         .HasColumnType("INTEGER");
 
-                    b.Property<int>("Month")
-                        .HasColumnType("INTEGER");
+                    b.Property<DateTime>("Month")
+                        .HasColumnType("TEXT");
 
                     b.Property<string>("Status")
                         .IsRequired()
                         .HasColumnType("TEXT");
 
-                    b.Property<int>("Year")
-                        .HasColumnType("INTEGER");
-
                     b.HasKey("Id");
 
                     b.HasIndex("EmployeId");
Index: Migrations/20220525192246_ChangeSalary2.Designer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/20220525192246_ChangeSalary2.Designer.cs b/Migrations/20220525192246_ChangeSalary2.Designer.cs
new file mode 100644
--- /dev/null	(date 1653507881372)
+++ b/Migrations/20220525192246_ChangeSalary2.Designer.cs	(date 1653507881372)
@@ -0,0 +1,205 @@
+// <auto-generated />
+using System;
+using Microsoft.EntityFrameworkCore;
+using Microsoft.EntityFrameworkCore.Infrastructure;
+using Microsoft.EntityFrameworkCore.Migrations;
+using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
+
+#nullable disable
+
+namespace GestionEmploye.Migrations
+{
+    [DbContext(typeof(AppContext))]
+    [Migration("20220525192246_ChangeSalary2")]
+    partial class ChangeSalary2
+    {
+        protected override void BuildTargetModel(ModelBuilder modelBuilder)
+        {
+#pragma warning disable 612, 618
+            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");
+
+            modelBuilder.Entity("GestionEmploye.Models.Admin", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("PersonId")
+                        .HasColumnType("INTEGER");
+
+                    b.HasKey("Id");
+
+                    b.ToTable("Admin");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<DateTime>("Date")
+                        .HasColumnType("TEXT");
+
+                    b.Property<DateTime>("DemandeTime")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("TEXT")
+                        .HasDefaultValueSql("datetime()");
+
+                    b.Property<int>("Duration")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Status")
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("EmployeId");
+
+                    b.ToTable("Conge");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("CongeRemaining")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<float>("CurrentSalary")
+                        .HasColumnType("REAL");
+
+                    b.Property<int>("PersonId")
+                        .HasColumnType("INTEGER");
+
+                    b.HasKey("Id");
+
+                    b.ToTable("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Person", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int?>("AdminId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Email")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<int?>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Nom")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Password")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Prenom")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("AdminId")
+                        .IsUnique();
+
+                    b.HasIndex("EmployeId")
+                        .IsUnique();
+
+                    b.ToTable("Person");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Salary", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<float>("Amount")
+                        .HasColumnType("REAL");
+
+                    b.Property<int>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<DateTime>("Month")
+                        .HasColumnType("TEXT");
+
+                    b.Property<string>("Status")
+                        .IsRequired()
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("EmployeId");
+
+                    b.ToTable("Salary");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithMany("Conges")
+                        .HasForeignKey("EmployeId")
+                        .OnDelete(DeleteBehavior.Cascade)
+                        .IsRequired();
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Person", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Admin", "Admin")
+                        .WithOne("Person")
+                        .HasForeignKey("GestionEmploye.Models.Person", "AdminId");
+
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithOne("Person")
+                        .HasForeignKey("GestionEmploye.Models.Person", "EmployeId");
+
+                    b.Navigation("Admin");
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Salary", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithMany("Salaries")
+                        .HasForeignKey("EmployeId")
+                        .OnDelete(DeleteBehavior.Cascade)
+                        .IsRequired();
+
+                    b.Navigation("Employe");
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Admin", b =>
+                {
+                    b.Navigation("Person")
+                        .IsRequired();
+                });
+
+            modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
+                {
+                    b.Navigation("Conges");
+
+                    b.Navigation("Person")
+                        .IsRequired();
+
+                    b.Navigation("Salaries");
+                });
+#pragma warning restore 612, 618
+        }
+    }
+}
Index: Migrations/20220525192246_ChangeSalary2.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/20220525192246_ChangeSalary2.cs b/Migrations/20220525192246_ChangeSalary2.cs
new file mode 100644
--- /dev/null	(date 1653507881373)
+++ b/Migrations/20220525192246_ChangeSalary2.cs	(date 1653507881373)
@@ -0,0 +1,32 @@
+using System;
+using Microsoft.EntityFrameworkCore.Migrations;
+
+#nullable disable
+
+namespace GestionEmploye.Migrations
+{
+    public partial class ChangeSalary2 : Migration
+    {
+        protected override void Up(MigrationBuilder migrationBuilder)
+        {
+            migrationBuilder.AlterColumn<DateTime>(
+                name: "Month",
+                table: "Salary",
+                type: "TEXT",
+                nullable: false,
+                oldClrType: typeof(int),
+                oldType: "INTEGER");
+        }
+
+        protected override void Down(MigrationBuilder migrationBuilder)
+        {
+            migrationBuilder.AlterColumn<int>(
+                name: "Month",
+                table: "Salary",
+                type: "INTEGER",
+                nullable: false,
+                oldClrType: typeof(DateTime),
+                oldType: "TEXT");
+        }
+    }
+}
Index: Migrations/20220525191904_ChangeSalary.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/20220525191904_ChangeSalary.cs b/Migrations/20220525191904_ChangeSalary.cs
new file mode 100644
--- /dev/null	(date 1653507881371)
+++ b/Migrations/20220525191904_ChangeSalary.cs	(date 1653507881371)
@@ -0,0 +1,26 @@
+using Microsoft.EntityFrameworkCore.Migrations;
+
+#nullable disable
+
+namespace GestionEmploye.Migrations
+{
+    public partial class ChangeSalary : Migration
+    {
+        protected override void Up(MigrationBuilder migrationBuilder)
+        {
+            migrationBuilder.DropColumn(
+                name: "Year",
+                table: "Salary");
+        }
+
+        protected override void Down(MigrationBuilder migrationBuilder)
+        {
+            migrationBuilder.AddColumn<int>(
+                name: "Year",
+                table: "Salary",
+                type: "INTEGER",
+                nullable: false,
+                defaultValue: 0);
+        }
+    }
+}
Index: Controllers/SalariesController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controllers/SalariesController.cs b/Controllers/SalariesController.cs
new file mode 100644
--- /dev/null	(date 1653507881368)
+++ b/Controllers/SalariesController.cs	(date 1653507881368)
@@ -0,0 +1,180 @@
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Threading.Tasks;
+using Microsoft.AspNetCore.Mvc;
+using Microsoft.AspNetCore.Mvc.Rendering;
+using Microsoft.EntityFrameworkCore;
+using GestionEmploye.Models;
+using System.Globalization;
+
+namespace GestionEmploye.Controllers
+{
+    public class SalariesController : Controller
+    {
+        private readonly AppContext _context;
+
+        public SalariesController(AppContext context)
+        {
+            _context = context;
+        }
+
+        // GET: Salaries
+        public async Task<IActionResult> Index()
+        {
+            var employees = 
+                _context.Employe
+                    .Select(s => new 
+                    { 
+                    Id = s.Id,
+                    FullName = $"{s.Person.Nom} {s.Person.Prenom} - {s.Id}"
+                    })
+                    .ToList();
+
+            ViewData["EmployeId"] = new SelectList(employees, "Id", "FullName");
+            var status = new [] { new {Name = "En cours" , Value = "Pending"},new {Name = "Payé" , Value = "Paid"}}.ToList();
+            ViewData["StatusList"] = new SelectList(status, "Value", "Name");
+            ViewData["Salaries"] = await _context.Salary.Include(s => s.Employe).ToListAsync();
+            return View();
+        }
+
+        // GET: Salaries/Details/5
+        public async Task<IActionResult> Details(int? id)
+        {
+            if (id == null || _context.Salary == null)
+            {
+                return NotFound();
+            }
+
+            var salary = await _context.Salary
+                .Include(s => s.Employe)
+                .FirstOrDefaultAsync(m => m.Id == id);
+            if (salary == null)
+            {
+                return NotFound();
+            }
+
+            return View(salary);
+        }
+
+        // GET: Salaries/Create
+        public IActionResult Create()
+        {
+            ViewData["EmployeId"] = new SelectList(_context.Employe, "Id", "Id");
+            return View();
+        }
+
+        // POST: Salaries/Create
+        // To protect from overposting attacks, enable the specific properties you want to bind to.
+        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
+        [HttpPost]
+        [ValidateAntiForgeryToken]
+        public async Task<IActionResult> Create([Bind("Id,Amount,Month,Status,EmployeId")] Salary salary)
+        {
+            if (ModelState.IsValid)
+            {
+                _context.Add(salary);
+                await _context.SaveChangesAsync();
+                return RedirectToAction(nameof(Index));
+            }
+            ViewData["EmployeId"] = new SelectList(_context.Employe, "Id", "Id", salary.EmployeId);
+            return View(salary);
+        }
+
+        // GET: Salaries/Edit/5
+        public async Task<IActionResult> Edit(int? id)
+        {
+            if (id == null || _context.Salary == null)
+            {
+                return NotFound();
+            }
+
+            var salary = await _context.Salary.FindAsync(id);
+            if (salary == null)
+            {
+                return NotFound();
+            }
+            ViewData["EmployeId"] = new SelectList(_context.Employe, "Id", "Id", salary.EmployeId);
+            return View(salary);
+        }
+
+        // POST: Salaries/Edit/5
+        // To protect from overposting attacks, enable the specific properties you want to bind to.
+        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
+        [HttpPost]
+        [ValidateAntiForgeryToken]
+        public async Task<IActionResult> Edit(int id, [Bind("Id,Amount,Month,Year,Status,EmployeId")] Salary salary)
+        {
+            if (id != salary.Id)
+            {
+                return NotFound();
+            }
+
+            if (ModelState.IsValid)
+            {
+                try
+                {
+                    _context.Update(salary);
+                    await _context.SaveChangesAsync();
+                }
+                catch (DbUpdateConcurrencyException)
+                {
+                    if (!SalaryExists(salary.Id))
+                    {
+                        return NotFound();
+                    }
+                    else
+                    {
+                        throw;
+                    }
+                }
+                return RedirectToAction(nameof(Index));
+            }
+            ViewData["EmployeId"] = new SelectList(_context.Employe, "Id", "Id", salary.EmployeId);
+            return View(salary);
+        }
+
+        // GET: Salaries/Delete/5
+        public async Task<IActionResult> Delete(int? id)
+        {
+            if (id == null || _context.Salary == null)
+            {
+                return NotFound();
+            }
+
+            var salary = await _context.Salary
+                .Include(s => s.Employe)
+                .FirstOrDefaultAsync(m => m.Id == id);
+            if (salary == null)
+            {
+                return NotFound();
+            }
+
+            return View(salary);
+        }
+
+        // POST: Salaries/Delete/5
+        [HttpPost, ActionName("Delete")]
+        [ValidateAntiForgeryToken]
+        public async Task<IActionResult> DeleteConfirmed(int id)
+        {
+            if (_context.Salary == null)
+            {
+                return Problem("Entity set 'AppContext.Salary'  is null.");
+            }
+            var salary = await _context.Salary.FindAsync(id);
+            if (salary != null)
+            {
+                _context.Salary.Remove(salary);
+            }
+
+            await _context.SaveChangesAsync();
+            return RedirectToAction(nameof(Index));
+        }
+
+        private bool SalaryExists(int id)
+        {
+            return _context.Salary.Any(e => e.Id == id);
+        }
+    }
+}
Index: Models/Salary.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.ComponentModel.DataAnnotations;\r\n\r\nnamespace GestionEmploye.Models\r\n{\r\n    public class Salary {\r\n        \r\n        public int Id { get; set; }\r\n\r\n        [Required]\r\n        public float Amount { get; set; }\r\n\r\n        [Required]\r\n        [Range(0,11)]\r\n        public int Month { get; set; }\r\n\r\n        [Required]\r\n        public int Year { get; set; }\r\n\r\n        [Required]\r\n        [RegularExpression(\"Pending|Paid\", ErrorMessage = \"Invalid Status\")]\r\n        public string Status { get; set; }\r\n\r\n        \r\n        [Required]\r\n        public int EmployeId {get; set;}\r\n\r\n        [Required]\r\n        public Employe Employe {get; set;}\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Salary.cs b/Models/Salary.cs
--- a/Models/Salary.cs	(revision faa0b5f191f3eba590e9b29dc80bb89378ab79c5)
+++ b/Models/Salary.cs	(date 1653507881378)
@@ -10,11 +10,8 @@
         public float Amount { get; set; }
 
         [Required]
-        [Range(0,11)]
-        public int Month { get; set; }
-
-        [Required]
-        public int Year { get; set; }
+        [DataType(DataType.Date)]
+        public DateTime Month { get; set; }
 
         [Required]
         [RegularExpression("Pending|Paid", ErrorMessage = "Invalid Status")]
@@ -24,7 +21,6 @@
         [Required]
         public int EmployeId {get; set;}
 
-        [Required]
         public Employe Employe {get; set;}
 
     }
