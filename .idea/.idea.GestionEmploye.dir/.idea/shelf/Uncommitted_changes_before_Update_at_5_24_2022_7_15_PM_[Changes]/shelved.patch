Index: Models/Employe.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.ComponentModel.DataAnnotations;\r\n\r\nnamespace GestionEmploye.Models\r\n{\r\n    public class Employe\r\n    {\r\n        public int Id { get; set; }\r\n\r\n        [Required]\r\n        public int PersonId {get; set;}\r\n\r\n        [Required]\r\n        public Person Person {get; set;}\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Models/Employe.cs b/Models/Employe.cs
--- a/Models/Employe.cs	(revision bc56502b561c9be63b1aabf61cdc0a6e24ba7fad)
+++ b/Models/Employe.cs	(date 1653416077446)
@@ -1,3 +1,4 @@
+using System.ComponentModel;
 using System.ComponentModel.DataAnnotations;
 
 namespace GestionEmploye.Models
@@ -12,5 +13,11 @@
         [Required]
         public Person Person {get; set;}
 
+        
+        [DefaultValue(30)]
+        [Range(0,30)]
+        public int CongeRemaining { get; set; }
+
+        public ICollection<Conge> Conges { get; set; }
     }
 }
\ No newline at end of file
Index: Controllers/AdminController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Diagnostics;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing GestionEmploye.Models;\r\n\r\nnamespace GestionEmploye.Controllers;\r\n\r\npublic class AdminController : Controller\r\n{\r\n    private readonly AppContext _context;\r\n\r\n    public AdminController(AppContext context)\r\n    {\r\n        _context = context;\r\n    }\r\n\r\n\r\n    public IActionResult Index() {\r\n        ViewData[\"TotalEmployees\"] = _context.Employe.Count();\r\n        // ViewBag.TotalEmployees ??= -1;\r\n\r\n        return View();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controllers/AdminController.cs b/Controllers/AdminController.cs
--- a/Controllers/AdminController.cs	(revision bc56502b561c9be63b1aabf61cdc0a6e24ba7fad)
+++ b/Controllers/AdminController.cs	(date 1653416077434)
@@ -16,8 +16,7 @@
 
     public IActionResult Index() {
         ViewData["TotalEmployees"] = _context.Employe.Count();
-        // ViewBag.TotalEmployees ??= -1;
-
+        
         return View();
     }
 }
Index: Migrations/AppContextModelSnapshot.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// <auto-generated />\r\nusing System;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.EntityFrameworkCore.Infrastructure;\r\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\r\n\r\n#nullable disable\r\n\r\nnamespace GestionEmploye.Migrations\r\n{\r\n    [DbContext(typeof(AppContext))]\r\n    partial class AppContextModelSnapshot : ModelSnapshot\r\n    {\r\n        protected override void BuildModel(ModelBuilder modelBuilder)\r\n        {\r\n#pragma warning disable 612, 618\r\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"6.0.5\");\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Admin\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int>(\"PersonId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.ToTable(\"Admin\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Employe\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int>(\"PersonId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.ToTable(\"Employe\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Person\", b =>\r\n                {\r\n                    b.Property<int>(\"Id\")\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<int?>(\"AdminId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<string>(\"Email\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<int?>(\"EmployeId\")\r\n                        .HasColumnType(\"INTEGER\");\r\n\r\n                    b.Property<string>(\"Nom\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<string>(\"Password\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.Property<string>(\"Prenom\")\r\n                        .IsRequired()\r\n                        .HasColumnType(\"TEXT\");\r\n\r\n                    b.HasKey(\"Id\");\r\n\r\n                    b.HasIndex(\"AdminId\")\r\n                        .IsUnique();\r\n\r\n                    b.HasIndex(\"EmployeId\")\r\n                        .IsUnique();\r\n\r\n                    b.ToTable(\"Person\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Person\", b =>\r\n                {\r\n                    b.HasOne(\"GestionEmploye.Models.Admin\", \"Admin\")\r\n                        .WithOne(\"Person\")\r\n                        .HasForeignKey(\"GestionEmploye.Models.Person\", \"AdminId\");\r\n\r\n                    b.HasOne(\"GestionEmploye.Models.Employe\", \"Employe\")\r\n                        .WithOne(\"Person\")\r\n                        .HasForeignKey(\"GestionEmploye.Models.Person\", \"EmployeId\");\r\n\r\n                    b.Navigation(\"Admin\");\r\n\r\n                    b.Navigation(\"Employe\");\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Admin\", b =>\r\n                {\r\n                    b.Navigation(\"Person\")\r\n                        .IsRequired();\r\n                });\r\n\r\n            modelBuilder.Entity(\"GestionEmploye.Models.Employe\", b =>\r\n                {\r\n                    b.Navigation(\"Person\")\r\n                        .IsRequired();\r\n                });\r\n#pragma warning restore 612, 618\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Migrations/AppContextModelSnapshot.cs b/Migrations/AppContextModelSnapshot.cs
--- a/Migrations/AppContextModelSnapshot.cs	(revision bc56502b561c9be63b1aabf61cdc0a6e24ba7fad)
+++ b/Migrations/AppContextModelSnapshot.cs	(date 1653416077442)
@@ -30,11 +30,42 @@
                     b.ToTable("Admin");
                 });
 
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.Property<int>("Id")
+                        .ValueGeneratedOnAdd()
+                        .HasColumnType("INTEGER");
+
+                    b.Property<DateTime>("Date")
+                        .HasColumnType("TEXT");
+
+                    b.Property<DateTime>("DemandeTime")
+                        .HasColumnType("TEXT");
+
+                    b.Property<int>("Duration")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<int>("EmployeId")
+                        .HasColumnType("INTEGER");
+
+                    b.Property<string>("Status")
+                        .HasColumnType("TEXT");
+
+                    b.HasKey("Id");
+
+                    b.HasIndex("EmployeId");
+
+                    b.ToTable("Conge");
+                });
+
             modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
                 {
                     b.Property<int>("Id")
                         .ValueGeneratedOnAdd()
                         .HasColumnType("INTEGER");
+
+                    b.Property<int>("CongeRemaining")
+                        .HasColumnType("INTEGER");
 
                     b.Property<int>("PersonId")
                         .HasColumnType("INTEGER");
@@ -83,6 +114,17 @@
                     b.ToTable("Person");
                 });
 
+            modelBuilder.Entity("GestionEmploye.Models.Conge", b =>
+                {
+                    b.HasOne("GestionEmploye.Models.Employe", "Employe")
+                        .WithMany("Conges")
+                        .HasForeignKey("EmployeId")
+                        .OnDelete(DeleteBehavior.Cascade)
+                        .IsRequired();
+
+                    b.Navigation("Employe");
+                });
+
             modelBuilder.Entity("GestionEmploye.Models.Person", b =>
                 {
                     b.HasOne("GestionEmploye.Models.Admin", "Admin")
@@ -106,6 +148,8 @@
 
             modelBuilder.Entity("GestionEmploye.Models.Employe", b =>
                 {
+                    b.Navigation("Conges");
+
                     b.Navigation("Person")
                         .IsRequired();
                 });
Index: Data/AppContext.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing GestionEmploye.Models;\r\n\r\n    public class AppContext : DbContext\r\n    {\r\n        public AppContext (DbContextOptions<AppContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n\r\n        protected override void OnModelCreating(ModelBuilder modelBuilder){\r\n            modelBuilder.Entity<Employe>()\r\n            .HasOne(b => b.Person)\r\n            .WithOne(i => i.Employe)\r\n            .HasForeignKey<Person>(b => b.EmployeId);\r\n            \r\n            modelBuilder.Entity<Admin>()\r\n            .HasOne(b => b.Person)\r\n            .WithOne(i => i.Admin)\r\n            .HasForeignKey<Person>(b => b.AdminId);\r\n        }\r\n\r\n        public DbSet<Employe> Employe { get; set; }\r\n        public DbSet<Person> Person { get; set; }\r\n        public DbSet<Admin> Admin { get; set; }\r\n        \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Data/AppContext.cs b/Data/AppContext.cs
--- a/Data/AppContext.cs	(revision bc56502b561c9be63b1aabf61cdc0a6e24ba7fad)
+++ b/Data/AppContext.cs	(date 1653416077437)
@@ -5,27 +5,39 @@
 using Microsoft.EntityFrameworkCore;
 using GestionEmploye.Models;
 
-    public class AppContext : DbContext
-    {
-        public AppContext (DbContextOptions<AppContext> options)
-            : base(options)
-        {
-        }
+public class AppContext : DbContext
+{
+    public AppContext(DbContextOptions<AppContext> options)
+        : base(options)
+    {
+    }
 
-        protected override void OnModelCreating(ModelBuilder modelBuilder){
-            modelBuilder.Entity<Employe>()
-            .HasOne(b => b.Person)
-            .WithOne(i => i.Employe)
-            .HasForeignKey<Person>(b => b.EmployeId);
-            
-            modelBuilder.Entity<Admin>()
-            .HasOne(b => b.Person)
-            .WithOne(i => i.Admin)
-            .HasForeignKey<Person>(b => b.AdminId);
-        }
+    protected override void OnModelCreating(ModelBuilder modelBuilder)
+    {
+        modelBuilder.Entity<Employe>()
+        .HasOne(b => b.Person)
+        .WithOne(i => i.Employe)
+        .HasForeignKey<Person>(b => b.EmployeId);
+
+        modelBuilder.Entity<Admin>()
+        .HasOne(b => b.Person)
+        .WithOne(i => i.Admin)
+        .HasForeignKey<Person>(b => b.AdminId);
+
+        var conge = modelBuilder.Entity<Conge>();
+        conge
+            .HasOne(b => b.Employe)
+            .WithMany(i => i.Conges)
+            .HasForeignKey(b => b.EmployeId);
+            
+        conge.Property(b => b.DemandeTime)
+        .HasDefaultValueSql("datetime()");
+    }
 
-        public DbSet<Employe> Employe { get; set; }
-        public DbSet<Person> Person { get; set; }
-        public DbSet<Admin> Admin { get; set; }
-        
+    public DbSet<Employe> Employe { get; set; }
+    public DbSet<Person> Person { get; set; }
+    public DbSet<Admin> Admin { get; set; }
+
+    public DbSet<Conge> Conge { get; set; }
+
 }
